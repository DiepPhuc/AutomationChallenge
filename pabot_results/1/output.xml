<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.5 on darwin)" generated="20210420 04:21:31.502" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="/Users/macbookpro/Desktop/AutomationChallenge/tests">
<suite id="s1-s1" name="SearchTheCityTest" source="/Users/macbookpro/Desktop/AutomationChallenge/tests/SearchTheCityTest">
<suite id="s1-s1-s1" name="Search Weather" source="/Users/macbookpro/Desktop/AutomationChallenge/tests/SearchTheCityTest/search_weather.robot">
<test id="s1-s1-s1-t1" name="User can search the city">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:21:31.924" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:21:31.923" endtime="20210420 04:21:31.924"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:21:31.926" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7f8f4463bf10&gt;</msg>
<status status="PASS" starttime="20210420 04:21:31.926" endtime="20210420 04:21:31.926"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:21:31.927" endtime="20210420 04:21:31.927"/>
</kw>
<status status="PASS" starttime="20210420 04:21:31.926" endtime="20210420 04:21:31.927"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:21:31.928" endtime="20210420 04:21:31.928"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:21:31.928" endtime="20210420 04:21:31.928"/>
</kw>
<status status="PASS" starttime="20210420 04:21:31.927" endtime="20210420 04:21:31.928"/>
</kw>
<status status="PASS" starttime="20210420 04:21:31.927" endtime="20210420 04:21:31.929"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:21:31.929" endtime="20210420 04:21:31.929"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:21:31.929" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:21:31.929" endtime="20210420 04:21:33.725"/>
</kw>
<status status="PASS" starttime="20210420 04:21:31.925" endtime="20210420 04:21:33.725"/>
</kw>
<status status="PASS" starttime="20210420 04:21:31.924" endtime="20210420 04:21:33.725"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:21:33.726" endtime="20210420 04:21:33.832"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:21:33.833" endtime="20210420 04:21:33.833"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:21:33.835" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:21:33.834" endtime="20210420 04:21:38.859"/>
</kw>
<status status="PASS" starttime="20210420 04:21:33.834" endtime="20210420 04:21:38.859"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:21:38.860" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:21:38.859" endtime="20210420 04:21:38.860"/>
</kw>
<status status="PASS" starttime="20210420 04:21:31.923" endtime="20210420 04:21:38.861"/>
</kw>
<kw name="Given user goes to homepage" library="search_step">
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:21:38.862" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:21:38.862" endtime="20210420 04:21:39.866"/>
</kw>
<status status="PASS" starttime="20210420 04:21:38.862" endtime="20210420 04:21:39.867"/>
</kw>
<status status="PASS" starttime="20210420 04:21:38.861" endtime="20210420 04:21:39.867"/>
</kw>
<kw name="And he inputs city in the text field" library="search_step">
<arg>Thanh pho Ho Chi Minh</arg>
<kw name="Input City" library="search_page">
<arg>${city}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:21:39.868" endtime="20210420 04:21:40.986"/>
</kw>
<kw name="Scroll And Click" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:40.988" endtime="20210420 04:21:41.013"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:21:41.014" endtime="20210420 04:21:41.288"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:41.289" level="INFO">Clicking element 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:21:41.289" endtime="20210420 04:21:41.340"/>
</kw>
<status status="PASS" starttime="20210420 04:21:40.987" endtime="20210420 04:21:41.340"/>
</kw>
<kw name="Wait And Input" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<arg>${the_city}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_input} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:41.341" endtime="20210420 04:21:41.352"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:41.353" level="INFO">Typing text 'Thanh pho Ho Chi Minh' into text field 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:21:41.353" endtime="20210420 04:21:41.450"/>
</kw>
<status status="PASS" starttime="20210420 04:21:41.340" endtime="20210420 04:21:41.450"/>
</kw>
<status status="PASS" starttime="20210420 04:21:39.868" endtime="20210420 04:21:41.450"/>
</kw>
<status status="PASS" starttime="20210420 04:21:39.867" endtime="20210420 04:21:41.450"/>
</kw>
<kw name="When he clicks on Submit button" library="search_step">
<kw name="Submit Field" library="search_page">
<kw name="Scroll And Click" library="helper_func">
<arg>${SUBMIT_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:41.452" endtime="20210420 04:21:41.467"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:21:41.467" endtime="20210420 04:21:41.738"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:41.739" level="INFO">Clicking element 'xpath://*[@class="search"]/button'.</msg>
<status status="PASS" starttime="20210420 04:21:41.738" endtime="20210420 04:21:41.772"/>
</kw>
<status status="PASS" starttime="20210420 04:21:41.452" endtime="20210420 04:21:41.773"/>
</kw>
<status status="PASS" starttime="20210420 04:21:41.451" endtime="20210420 04:21:41.773"/>
</kw>
<status status="PASS" starttime="20210420 04:21:41.451" endtime="20210420 04:21:41.773"/>
</kw>
<kw name="Then verify that the city is displayed correctly" library="search_step">
<arg>Ho Chi Minh</arg>
<kw name="Verify Results" library="search_page">
<arg>${the_city}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_valid}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:41.774" endtime="20210420 04:21:42.425"/>
</kw>
<msg timestamp="20210420 04:21:42.425" level="INFO">${check_valid} = True</msg>
<status status="PASS" starttime="20210420 04:21:41.774" endtime="20210420 04:21:42.425"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count_result}</var>
<arg>${DROPDOWN_MENU}/li</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20210420 04:21:42.432" level="INFO">${count_result} = 1</msg>
<status status="PASS" starttime="20210420 04:21:42.426" endtime="20210420 04:21:42.432"/>
</kw>
<if>
<branch type="IF" condition="'${check_valid}' == 'True'">
<if>
<branch type="IF" condition="${count_result} &gt; 1">
<for flavor="IN RANGE">
<var>${i}</var>
<value>1</value>
<value>${count_result}+1</value>
<iter>
<var name="${i}">${i}</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li[${i}]/span</arg>
<status status="NOT RUN" starttime="20210420 04:21:42.433" endtime="20210420 04:21:42.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210420 04:21:42.433" endtime="20210420 04:21:42.433"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:21:42.433" endtime="20210420 04:21:42.433"/>
</iter>
<status status="NOT RUN" starttime="20210420 04:21:42.432" endtime="20210420 04:21:42.433"/>
</for>
<status status="NOT RUN" starttime="20210420 04:21:42.432" endtime="20210420 04:21:42.434"/>
</branch>
<branch type="ELSE">
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li/span</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:42.435" endtime="20210420 04:21:42.451"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:42.466" level="INFO">${text} = Thanh pho Ho Chi Minh, VN</msg>
<status status="PASS" starttime="20210420 04:21:42.451" endtime="20210420 04:21:42.466"/>
</kw>
<msg timestamp="20210420 04:21:42.466" level="INFO">${result} = Thanh pho Ho Chi Minh, VN</msg>
<status status="PASS" starttime="20210420 04:21:42.434" endtime="20210420 04:21:42.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:21:42.466" endtime="20210420 04:21:42.467"/>
</kw>
<status status="PASS" starttime="20210420 04:21:42.434" endtime="20210420 04:21:42.467"/>
</branch>
<status status="PASS" starttime="20210420 04:21:42.432" endtime="20210420 04:21:42.467"/>
</if>
<status status="PASS" starttime="20210420 04:21:42.432" endtime="20210420 04:21:42.467"/>
</branch>
<branch type="ELSE">
<kw name="Verify No Result" library="search_page">
<status status="NOT RUN" starttime="20210420 04:21:42.467" endtime="20210420 04:21:42.467"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:21:42.467" endtime="20210420 04:21:42.467"/>
</branch>
<status status="PASS" starttime="20210420 04:21:42.432" endtime="20210420 04:21:42.468"/>
</if>
<status status="PASS" starttime="20210420 04:21:41.774" endtime="20210420 04:21:42.468"/>
</kw>
<status status="PASS" starttime="20210420 04:21:41.773" endtime="20210420 04:21:42.468"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:21:42.469" endtime="20210420 04:21:42.544"/>
</kw>
<status status="PASS" starttime="20210420 04:21:42.468" endtime="20210420 04:21:42.545"/>
</kw>
<tag>TC-can_search_city</tag>
<status status="PASS" starttime="20210420 04:21:31.922" endtime="20210420 04:21:42.545"/>
</test>
<test id="s1-s1-s1-t2" name="User can select the options city">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:21:42.548" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:21:42.548" endtime="20210420 04:21:42.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:21:42.551" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7f8f4461fb20&gt;</msg>
<status status="PASS" starttime="20210420 04:21:42.550" endtime="20210420 04:21:42.551"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:21:42.551" endtime="20210420 04:21:42.551"/>
</kw>
<status status="PASS" starttime="20210420 04:21:42.551" endtime="20210420 04:21:42.552"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:21:42.553" endtime="20210420 04:21:42.554"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:21:42.554" endtime="20210420 04:21:42.554"/>
</kw>
<status status="PASS" starttime="20210420 04:21:42.552" endtime="20210420 04:21:42.555"/>
</kw>
<status status="PASS" starttime="20210420 04:21:42.552" endtime="20210420 04:21:42.555"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:21:42.555" endtime="20210420 04:21:42.555"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:21:42.556" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:21:42.556" endtime="20210420 04:21:43.845"/>
</kw>
<status status="PASS" starttime="20210420 04:21:42.550" endtime="20210420 04:21:43.846"/>
</kw>
<status status="PASS" starttime="20210420 04:21:42.549" endtime="20210420 04:21:43.846"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:21:43.847" endtime="20210420 04:21:43.963"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:21:43.963" endtime="20210420 04:21:43.964"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:21:43.965" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:21:43.965" endtime="20210420 04:21:49.061"/>
</kw>
<status status="PASS" starttime="20210420 04:21:43.964" endtime="20210420 04:21:49.062"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:21:49.062" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:21:49.062" endtime="20210420 04:21:49.063"/>
</kw>
<status status="PASS" starttime="20210420 04:21:42.548" endtime="20210420 04:21:49.063"/>
</kw>
<kw name="Given user goes to homepage" library="search_step">
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:21:49.064" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:21:49.064" endtime="20210420 04:21:50.271"/>
</kw>
<status status="PASS" starttime="20210420 04:21:49.064" endtime="20210420 04:21:50.271"/>
</kw>
<status status="PASS" starttime="20210420 04:21:49.063" endtime="20210420 04:21:50.271"/>
</kw>
<kw name="And he inputs city in the text field" library="search_step">
<arg>Ho Chi Minh</arg>
<kw name="Input City" library="search_page">
<arg>${city}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:21:50.272" endtime="20210420 04:21:50.736"/>
</kw>
<kw name="Scroll And Click" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:50.737" endtime="20210420 04:21:50.758"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:21:50.760" endtime="20210420 04:21:51.039"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:51.040" level="INFO">Clicking element 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:21:51.039" endtime="20210420 04:21:51.133"/>
</kw>
<status status="PASS" starttime="20210420 04:21:50.737" endtime="20210420 04:21:51.133"/>
</kw>
<kw name="Wait And Input" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<arg>${the_city}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_input} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:51.135" endtime="20210420 04:21:51.153"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:51.156" level="INFO">Typing text 'Ho Chi Minh' into text field 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:21:51.155" endtime="20210420 04:21:51.243"/>
</kw>
<status status="PASS" starttime="20210420 04:21:51.134" endtime="20210420 04:21:51.243"/>
</kw>
<status status="PASS" starttime="20210420 04:21:50.272" endtime="20210420 04:21:51.243"/>
</kw>
<status status="PASS" starttime="20210420 04:21:50.272" endtime="20210420 04:21:51.243"/>
</kw>
<kw name="When he clicks on Submit button" library="search_step">
<kw name="Submit Field" library="search_page">
<kw name="Scroll And Click" library="helper_func">
<arg>${SUBMIT_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:51.245" endtime="20210420 04:21:51.260"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:21:51.260" endtime="20210420 04:21:51.540"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:51.541" level="INFO">Clicking element 'xpath://*[@class="search"]/button'.</msg>
<status status="PASS" starttime="20210420 04:21:51.540" endtime="20210420 04:21:51.575"/>
</kw>
<status status="PASS" starttime="20210420 04:21:51.244" endtime="20210420 04:21:51.575"/>
</kw>
<status status="PASS" starttime="20210420 04:21:51.244" endtime="20210420 04:21:51.575"/>
</kw>
<status status="PASS" starttime="20210420 04:21:51.243" endtime="20210420 04:21:51.575"/>
</kw>
<kw name="And he selects the options city" library="search_step">
<kw name="Get Infos City" library="search_page">
<var>${city_infos}</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${city_name}</var>
<arg>${DROPDOWN_MENU}/li[1]/span[1]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:51.576" endtime="20210420 04:21:52.226"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:52.241" level="INFO">${text} = Thanh pho Ho Chi Minh, VN</msg>
<status status="PASS" starttime="20210420 04:21:52.226" endtime="20210420 04:21:52.241"/>
</kw>
<msg timestamp="20210420 04:21:52.241" level="INFO">${city_name} = Thanh pho Ho Chi Minh, VN</msg>
<status status="PASS" starttime="20210420 04:21:51.576" endtime="20210420 04:21:52.241"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${temperature}</var>
<arg>${DROPDOWN_MENU}/li[1]/span[2]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:52.242" endtime="20210420 04:21:52.257"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:52.274" level="INFO">${text} = 27°C</msg>
<status status="PASS" starttime="20210420 04:21:52.257" endtime="20210420 04:21:52.274"/>
</kw>
<msg timestamp="20210420 04:21:52.274" level="INFO">${temperature} = 27°C</msg>
<status status="PASS" starttime="20210420 04:21:52.241" endtime="20210420 04:21:52.274"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${lat_lng}</var>
<arg>${DROPDOWN_MENU}/li[1]/span[4]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:52.275" endtime="20210420 04:21:52.290"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:52.312" level="INFO">${text} = 10.750, 106.667</msg>
<status status="PASS" starttime="20210420 04:21:52.290" endtime="20210420 04:21:52.312"/>
</kw>
<msg timestamp="20210420 04:21:52.312" level="INFO">${lat_lng} = 10.750, 106.667</msg>
<status status="PASS" starttime="20210420 04:21:52.274" endtime="20210420 04:21:52.312"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${city_infos}</var>
<arg>${city_name}</arg>
<arg>${temperature}</arg>
<arg>${lat_lng}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210420 04:21:52.313" level="INFO">${city_infos} = ['Thanh pho Ho Chi Minh, VN', '27°C', '10.750, 106.667']</msg>
<status status="PASS" starttime="20210420 04:21:52.312" endtime="20210420 04:21:52.313"/>
</kw>
<msg timestamp="20210420 04:21:52.313" level="INFO">${city_infos} = ['Thanh pho Ho Chi Minh, VN', '27°C', '10.750, 106.667']</msg>
<status status="PASS" starttime="20210420 04:21:51.576" endtime="20210420 04:21:52.313"/>
</kw>
<kw name="Select Option City" library="search_page">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_valid}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:52.314" endtime="20210420 04:21:52.330"/>
</kw>
<msg timestamp="20210420 04:21:52.330" level="INFO">${check_valid} = True</msg>
<status status="PASS" starttime="20210420 04:21:52.314" endtime="20210420 04:21:52.330"/>
</kw>
<if>
<branch type="IF" condition="'${check_valid}' == 'True'">
<kw name="Scroll And Click" library="helper_func">
<arg>${DROPDOWN_MENU}/li[1]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:52.331" endtime="20210420 04:21:52.345"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:21:52.345" endtime="20210420 04:21:52.662"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:52.663" level="INFO">Clicking element 'xpath://*[@class="search-dropdown-menu"]/li[1]'.</msg>
<status status="PASS" starttime="20210420 04:21:52.662" endtime="20210420 04:21:52.709"/>
</kw>
<status status="PASS" starttime="20210420 04:21:52.330" endtime="20210420 04:21:52.710"/>
</kw>
<status status="PASS" starttime="20210420 04:21:52.330" endtime="20210420 04:21:52.710"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>"There is no option to select"</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20210420 04:21:52.711" endtime="20210420 04:21:52.711"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:21:52.710" endtime="20210420 04:21:52.711"/>
</branch>
<status status="PASS" starttime="20210420 04:21:52.330" endtime="20210420 04:21:52.711"/>
</if>
<status status="PASS" starttime="20210420 04:21:52.313" endtime="20210420 04:21:52.712"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${city_infos}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210420 04:21:52.713" level="INFO">${city_infos} = ['Thanh pho Ho Chi Minh, VN', '27°C', '10.750, 106.667']</msg>
<status status="PASS" starttime="20210420 04:21:52.712" endtime="20210420 04:21:52.713"/>
</kw>
<status status="PASS" starttime="20210420 04:21:51.575" endtime="20210420 04:21:52.713"/>
</kw>
<kw name="Then verify that the city is displayed correctly in section content" library="search_step">
<arg>Ho Chi Minh</arg>
<kw name="Verify Section Content" library="search_page">
<arg>${city_infos}</arg>
<arg>${city}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:21:52.715" endtime="20210420 04:21:54.042"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_city_name}</var>
<arg>${CITY_NAME_CONTENT}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:54.043" endtime="20210420 04:21:54.059"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:54.078" level="INFO">${text} = Ho Chi Minh City, VN</msg>
<status status="PASS" starttime="20210420 04:21:54.060" endtime="20210420 04:21:54.078"/>
</kw>
<msg timestamp="20210420 04:21:54.078" level="INFO">${actual_city_name} = Ho Chi Minh City, VN</msg>
<status status="PASS" starttime="20210420 04:21:54.043" endtime="20210420 04:21:54.078"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${actual_city_name}</var>
<arg>${actual_city_name}</arg>
<arg>${city}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210420 04:21:54.079" level="INFO">${actual_city_name} = ['Ho Chi Minh']</msg>
<status status="PASS" starttime="20210420 04:21:54.078" endtime="20210420 04:21:54.079"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${expected_selected_city}</var>
<arg>${selected_city}[0]</arg>
<arg>${city}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210420 04:21:54.080" level="INFO">${expected_selected_city} = ['Ho Chi Minh']</msg>
<status status="PASS" starttime="20210420 04:21:54.079" endtime="20210420 04:21:54.080"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_city_temperature}</var>
<arg>${CITY_TEMPERATURE_CONTENT}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:21:54.081" endtime="20210420 04:21:54.105"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:21:54.121" level="INFO">${text} = 26°C</msg>
<status status="PASS" starttime="20210420 04:21:54.106" endtime="20210420 04:21:54.121"/>
</kw>
<msg timestamp="20210420 04:21:54.121" level="INFO">${actual_city_temperature} = 26°C</msg>
<status status="PASS" starttime="20210420 04:21:54.081" endtime="20210420 04:21:54.121"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actual_city_name[0]}</arg>
<arg>${expected_selected_city[0]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210420 04:21:54.121" endtime="20210420 04:21:54.123"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actual_city_temperature}</arg>
<arg>${selected_city}[1]</arg>
<arg>${actual_city_temperature} not match with ${selected_city}[1]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210420 04:21:54.124" level="FAIL">26°C not match with 27°C: 26°C != 27°C</msg>
<status status="FAIL" starttime="20210420 04:21:54.123" endtime="20210420 04:21:54.124"/>
</kw>
<status status="FAIL" starttime="20210420 04:21:52.714" endtime="20210420 04:21:54.124"/>
</kw>
<status status="FAIL" starttime="20210420 04:21:52.714" endtime="20210420 04:21:54.125"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:21:54.125" endtime="20210420 04:21:54.199"/>
</kw>
<status status="PASS" starttime="20210420 04:21:54.125" endtime="20210420 04:21:54.200"/>
</kw>
<tag>TC-can_select_options_city</tag>
<status status="FAIL" starttime="20210420 04:21:42.547" endtime="20210420 04:21:54.200">26°C not match with 27°C: 26°C != 27°C</status>
</test>
<test id="s1-s1-s1-t3" name="User can change temperature from metric to imperial">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:21:54.202" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:21:54.202" endtime="20210420 04:21:54.202"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:21:54.203" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7f8f4467c580&gt;</msg>
<status status="PASS" starttime="20210420 04:21:54.203" endtime="20210420 04:21:54.203"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:21:54.204" endtime="20210420 04:21:54.204"/>
</kw>
<status status="PASS" starttime="20210420 04:21:54.204" endtime="20210420 04:21:54.204"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:21:54.205" endtime="20210420 04:21:54.206"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:21:54.206" endtime="20210420 04:21:54.206"/>
</kw>
<status status="PASS" starttime="20210420 04:21:54.205" endtime="20210420 04:21:54.206"/>
</kw>
<status status="PASS" starttime="20210420 04:21:54.205" endtime="20210420 04:21:54.206"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:21:54.206" endtime="20210420 04:21:54.207"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:21:54.207" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:21:54.207" endtime="20210420 04:21:55.505"/>
</kw>
<status status="PASS" starttime="20210420 04:21:54.203" endtime="20210420 04:21:55.505"/>
</kw>
<status status="PASS" starttime="20210420 04:21:54.202" endtime="20210420 04:21:55.505"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:21:55.506" endtime="20210420 04:21:55.611"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:21:55.611" endtime="20210420 04:21:55.612"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:21:55.612" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:21:55.612" endtime="20210420 04:22:01.330"/>
</kw>
<status status="PASS" starttime="20210420 04:21:55.612" endtime="20210420 04:22:01.330"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:22:01.332" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:22:01.331" endtime="20210420 04:22:01.332"/>
</kw>
<status status="PASS" starttime="20210420 04:21:54.201" endtime="20210420 04:22:01.332"/>
</kw>
<kw name="Given user goes to homepage" library="search_step">
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:22:01.335" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:22:01.335" endtime="20210420 04:22:02.264"/>
</kw>
<status status="PASS" starttime="20210420 04:22:01.334" endtime="20210420 04:22:02.264"/>
</kw>
<status status="PASS" starttime="20210420 04:22:01.333" endtime="20210420 04:22:02.264"/>
</kw>
<kw name="When he clicks on Imperial button" library="search_step">
<kw name="Wait And Click" library="helper_func">
<arg>${IMPERIAL_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_click}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_click} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:02.265" endtime="20210420 04:22:02.293"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_click}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:02.293" level="INFO">Clicking element 'xpath://*[@class="widget-switch switch-blue"]//*[@for="imperial"]'.</msg>
<status status="PASS" starttime="20210420 04:22:02.293" endtime="20210420 04:22:03.097"/>
</kw>
<status status="PASS" starttime="20210420 04:22:02.265" endtime="20210420 04:22:03.097"/>
</kw>
<status status="PASS" starttime="20210420 04:22:02.264" endtime="20210420 04:22:03.098"/>
</kw>
<kw name="Then verify that the temperature is changed from metric to imperial" library="search_step">
<kw name="Verify Imperial" library="search_page">
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:22:03.099" endtime="20210420 04:22:04.460"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_city_temperature}</var>
<arg>${CITY_TEMPERATURE_CONTENT}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:04.461" endtime="20210420 04:22:04.477"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:04.494" level="INFO">${text} = 50°F</msg>
<status status="PASS" starttime="20210420 04:22:04.477" endtime="20210420 04:22:04.494"/>
</kw>
<msg timestamp="20210420 04:22:04.495" level="INFO">${actual_city_temperature} = 50°F</msg>
<status status="PASS" starttime="20210420 04:22:04.460" endtime="20210420 04:22:04.495"/>
</kw>
<kw name="Get Substring" library="String">
<var>${actual_city_temperature}</var>
<arg>${actual_city_temperature}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210420 04:22:04.496" level="INFO">${actual_city_temperature} = F</msg>
<status status="PASS" starttime="20210420 04:22:04.495" endtime="20210420 04:22:04.496"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actual_city_temperature}</arg>
<arg>F</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210420 04:22:04.496" endtime="20210420 04:22:04.496"/>
</kw>
<status status="PASS" starttime="20210420 04:22:03.099" endtime="20210420 04:22:04.497"/>
</kw>
<status status="PASS" starttime="20210420 04:22:03.098" endtime="20210420 04:22:04.497"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:22:04.498" endtime="20210420 04:22:04.570"/>
</kw>
<status status="PASS" starttime="20210420 04:22:04.497" endtime="20210420 04:22:04.571"/>
</kw>
<tag>TC-can_change from_metric_to_imperial</tag>
<status status="PASS" starttime="20210420 04:21:54.201" endtime="20210420 04:22:04.571"/>
</test>
<test id="s1-s1-s1-t4" name="Verify that information weather is displayed same as respsonse data">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:22:04.573" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:22:04.573" endtime="20210420 04:22:04.573"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:22:04.575" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7f8f446e5400&gt;</msg>
<status status="PASS" starttime="20210420 04:22:04.574" endtime="20210420 04:22:04.575"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:22:04.576" endtime="20210420 04:22:04.576"/>
</kw>
<status status="PASS" starttime="20210420 04:22:04.575" endtime="20210420 04:22:04.576"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:22:04.577" endtime="20210420 04:22:04.577"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:22:04.577" endtime="20210420 04:22:04.577"/>
</kw>
<status status="PASS" starttime="20210420 04:22:04.576" endtime="20210420 04:22:04.577"/>
</kw>
<status status="PASS" starttime="20210420 04:22:04.576" endtime="20210420 04:22:04.578"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:22:04.578" endtime="20210420 04:22:04.578"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:22:04.579" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:22:04.578" endtime="20210420 04:22:05.969"/>
</kw>
<status status="PASS" starttime="20210420 04:22:04.574" endtime="20210420 04:22:05.969"/>
</kw>
<status status="PASS" starttime="20210420 04:22:04.574" endtime="20210420 04:22:05.969"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:22:05.970" endtime="20210420 04:22:06.074"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:22:06.074" endtime="20210420 04:22:06.075"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:22:06.076" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:22:06.076" endtime="20210420 04:22:10.970"/>
</kw>
<status status="PASS" starttime="20210420 04:22:06.075" endtime="20210420 04:22:10.971"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:22:10.971" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:22:10.971" endtime="20210420 04:22:10.972"/>
</kw>
<status status="PASS" starttime="20210420 04:22:04.573" endtime="20210420 04:22:10.972"/>
</kw>
<kw name="Given user goes to homepage" library="search_step">
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:22:10.975" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:22:10.974" endtime="20210420 04:22:11.946"/>
</kw>
<status status="PASS" starttime="20210420 04:22:10.973" endtime="20210420 04:22:11.946"/>
</kw>
<status status="PASS" starttime="20210420 04:22:10.972" endtime="20210420 04:22:11.946"/>
</kw>
<kw name="And he inputs city in the text field" library="search_step">
<arg>Ho Chi Minh</arg>
<kw name="Input City" library="search_page">
<arg>${city}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:22:11.948" endtime="20210420 04:22:12.625"/>
</kw>
<kw name="Scroll And Click" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:12.626" endtime="20210420 04:22:12.644"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:22:12.644" endtime="20210420 04:22:12.924"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:12.924" level="INFO">Clicking element 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:22:12.924" endtime="20210420 04:22:12.993"/>
</kw>
<status status="PASS" starttime="20210420 04:22:12.625" endtime="20210420 04:22:12.993"/>
</kw>
<kw name="Wait And Input" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<arg>${the_city}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_input} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:12.995" endtime="20210420 04:22:13.016"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:13.017" level="INFO">Typing text 'Ho Chi Minh' into text field 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:22:13.017" endtime="20210420 04:22:13.153"/>
</kw>
<status status="PASS" starttime="20210420 04:22:12.994" endtime="20210420 04:22:13.153"/>
</kw>
<status status="PASS" starttime="20210420 04:22:11.947" endtime="20210420 04:22:13.153"/>
</kw>
<status status="PASS" starttime="20210420 04:22:11.946" endtime="20210420 04:22:13.154"/>
</kw>
<kw name="When he clicks on Submit button" library="search_step">
<kw name="Submit Field" library="search_page">
<kw name="Scroll And Click" library="helper_func">
<arg>${SUBMIT_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:13.155" endtime="20210420 04:22:13.171"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:22:13.171" endtime="20210420 04:22:13.438"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:13.438" level="INFO">Clicking element 'xpath://*[@class="search"]/button'.</msg>
<status status="PASS" starttime="20210420 04:22:13.438" endtime="20210420 04:22:13.473"/>
</kw>
<status status="PASS" starttime="20210420 04:22:13.155" endtime="20210420 04:22:13.473"/>
</kw>
<status status="PASS" starttime="20210420 04:22:13.154" endtime="20210420 04:22:13.473"/>
</kw>
<status status="PASS" starttime="20210420 04:22:13.154" endtime="20210420 04:22:13.473"/>
</kw>
<kw name="And he selects the first city" library="search_step">
<arg>Ho Chi Minh</arg>
<kw name="Get info_city_weather" library="get_api">
<var>${weather_city_data}</var>
<arg>${city}</arg>
<kw name="Get city_id" library="get_api">
<var>${city_id}</var>
<arg>${city}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:22:13.475" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:22:13.475" endtime="20210420 04:22:13.475"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${city}</var>
<arg>${city}</arg>
<arg>UTF-8</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20210420 04:22:13.476" level="INFO">${city} = Ho Chi Minh</msg>
<status status="PASS" starttime="20210420 04:22:13.475" endtime="20210420 04:22:13.476"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${res}</var>
<arg>test-session</arg>
<arg>/data/2.5/find?q=${city}&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric</arg>
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<msg timestamp="20210420 04:22:14.628" level="INFO">GET Request : url=https://openweathermap.org/data/2.5/find?q=Ho%20Chi%20Minh&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric 
 path_url=/data/2.5/find?q=Ho%20Chi%20Minh&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210420 04:22:14.628" level="INFO">GET Response : url=https://openweathermap.org/data/2.5/find?q=Ho%20Chi%20Minh&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric 
 status=200, reason=OK 
 body={"message":"accurate","cod":"200","count":2,"list":[{"id":1566083,"name":"Thanh pho Ho Chi Minh","coord":{"lat":10.75,"lon":106.6667},"main":{"temp":300.15,"feels_like":303.78,"temp_min":300.15,"temp_max":300.15,"pressure":1009,"humidity":89},"dt":1618866580,"wind":{"speed":0.51,"deg":0},"sys":{"country":"VN"},"rain":null,"snow":null,"clouds":{"all":40},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]},{"id":1580578,"name":"Thành phố Hồ Chí Minh","coord":{"lat":10.8333,"lon":106.6667},"main":{"temp":300.15,"feels_like":303.78,"temp_min":300.15,"temp_max":300.15,"pressure":1009,"humidity":89},"dt":1618866346,"wind":{"speed":0.51,"deg":0},"sys":{"country":"VN"},"rain":null,"snow":null,"clouds":{"all":40},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]}]} 
 </msg>
<msg timestamp="20210420 04:22:14.629" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210420 04:22:13.476" endtime="20210420 04:22:14.629"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${res_data}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:14.634" level="INFO">${res_data} = {'message': 'accurate', 'cod': '200', 'count': 2, 'list': [{'id': 1566083, 'name': 'Thanh pho Ho Chi Minh', 'coord': {'lat': 10.75, 'lon': 106.6667}, 'main': {'temp': 300.15, 'feels_like': 303.78, 'te...</msg>
<status status="PASS" starttime="20210420 04:22:14.629" endtime="20210420 04:22:14.634"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${list_city}</var>
<arg>${res_data['list']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:14.635" level="INFO">${list_city} = [{'id': 1566083, 'name': 'Thanh pho Ho Chi Minh', 'coord': {'lat': 10.75, 'lon': 106.6667}, 'main': {'temp': 300.15, 'feels_like': 303.78, 'temp_min': 300.15, 'temp_max': 300.15, 'pressure': 1009, 'hu...</msg>
<status status="PASS" starttime="20210420 04:22:14.634" endtime="20210420 04:22:14.636"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${city_id}</var>
<arg>${list_city}[0]</arg>
<arg>id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20210420 04:22:14.636" level="INFO">${city_id} = 1566083</msg>
<status status="PASS" starttime="20210420 04:22:14.636" endtime="20210420 04:22:14.636"/>
</kw>
<msg timestamp="20210420 04:22:14.637" level="INFO">${city_id} = 1566083</msg>
<status status="PASS" starttime="20210420 04:22:13.474" endtime="20210420 04:22:14.637"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${res}</var>
<arg>test-session</arg>
<arg>/data/2.5/weather?id=${city_id}&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02</arg>
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<msg timestamp="20210420 04:22:15.081" level="INFO">GET Request : url=https://openweathermap.org/data/2.5/weather?id=1566083&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02 
 path_url=/data/2.5/weather?id=1566083&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210420 04:22:15.082" level="INFO">GET Response : url=https://openweathermap.org/data/2.5/weather?id=1566083&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02 
 status=200, reason=OK 
 body={"coord":{"lon":106.6667,"lat":10.75},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}],"base":"stations","main":{"temp":26,"feels_like":26,"temp_min":26,"temp_max":26,"pressure":1009,"humidity":94},"visibility":10000,"wind":{"speed":0.51,"deg":310},"clouds":{"all":40},"dt":1618867089,"sys":{"type":1,"id":9314,"country":"VN","sunrise":1618871987,"sunset":1618916663},"timezone":25200,"id":1566083,"name":"Ho Chi Minh City","cod":200} 
 </msg>
<msg timestamp="20210420 04:22:15.082" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210420 04:22:14.637" endtime="20210420 04:22:15.082"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${body_data}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:15.084" level="INFO">${body_data} = {'coord': {'lon': 106.6667, 'lat': 10.75}, 'weather': [{'id': 802, 'main': 'Clouds', 'description': 'scattered clouds', 'icon': '03n'}], 'base': 'stations', 'main': {'temp': 26, 'feels_like': 26, 'tem...</msg>
<status status="PASS" starttime="20210420 04:22:15.082" endtime="20210420 04:22:15.084"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${city_name}</var>
<arg>${body_data}[name]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:15.085" level="INFO">${city_name} = Ho Chi Minh City</msg>
<status status="PASS" starttime="20210420 04:22:15.084" endtime="20210420 04:22:15.085"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${country}</var>
<arg>${body_data}[sys][country]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:15.085" level="INFO">${country} = VN</msg>
<status status="PASS" starttime="20210420 04:22:15.085" endtime="20210420 04:22:15.085"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${weather_city_data}</var>
<arg>${city_name}</arg>
<arg>${country}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210420 04:22:15.086" level="INFO">${weather_city_data} = ['Ho Chi Minh City', 'VN']</msg>
<status status="PASS" starttime="20210420 04:22:15.086" endtime="20210420 04:22:15.086"/>
</kw>
<msg timestamp="20210420 04:22:15.087" level="INFO">${weather_city_data} = ['Ho Chi Minh City', 'VN']</msg>
<status status="PASS" starttime="20210420 04:22:13.474" endtime="20210420 04:22:15.087"/>
</kw>
<kw name="Get current_weather" library="get_api">
<var>${weather_infos_data}</var>
<arg>${city}</arg>
<kw name="Get lat_lng" library="get_api">
<var>${coord}</var>
<arg>${city}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:22:15.088" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:22:15.088" endtime="20210420 04:22:15.089"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${city}</var>
<arg>${city}</arg>
<arg>UTF-8</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20210420 04:22:15.089" level="INFO">${city} = Ho Chi Minh</msg>
<status status="PASS" starttime="20210420 04:22:15.089" endtime="20210420 04:22:15.089"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${res}</var>
<arg>test-session</arg>
<arg>/data/2.5/find?q=${city}&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric</arg>
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<msg timestamp="20210420 04:22:16.345" level="INFO">GET Request : url=https://openweathermap.org/data/2.5/find?q=Ho%20Chi%20Minh&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric 
 path_url=/data/2.5/find?q=Ho%20Chi%20Minh&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210420 04:22:16.345" level="INFO">GET Response : url=https://openweathermap.org/data/2.5/find?q=Ho%20Chi%20Minh&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric 
 status=200, reason=OK 
 body={"message":"accurate","cod":"200","count":2,"list":[{"id":1566083,"name":"Thanh pho Ho Chi Minh","coord":{"lat":10.75,"lon":106.6667},"main":{"temp":300.15,"feels_like":303.78,"temp_min":300.15,"temp_max":300.15,"pressure":1009,"humidity":89},"dt":1618866580,"wind":{"speed":0.51,"deg":0},"sys":{"country":"VN"},"rain":null,"snow":null,"clouds":{"all":40},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]},{"id":1580578,"name":"Thành phố Hồ Chí Minh","coord":{"lat":10.8333,"lon":106.6667},"main":{"temp":300.15,"feels_like":303.78,"temp_min":300.15,"temp_max":300.15,"pressure":1009,"humidity":89},"dt":1618866346,"wind":{"speed":0.51,"deg":0},"sys":{"country":"VN"},"rain":null,"snow":null,"clouds":{"all":40},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]}]} 
 </msg>
<msg timestamp="20210420 04:22:16.345" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210420 04:22:15.090" endtime="20210420 04:22:16.345"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${res_data}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.348" level="INFO">${res_data} = {'message': 'accurate', 'cod': '200', 'count': 2, 'list': [{'id': 1566083, 'name': 'Thanh pho Ho Chi Minh', 'coord': {'lat': 10.75, 'lon': 106.6667}, 'main': {'temp': 300.15, 'feels_like': 303.78, 'te...</msg>
<status status="PASS" starttime="20210420 04:22:16.346" endtime="20210420 04:22:16.348"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${list_city}</var>
<arg>${res_data['list']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.350" level="INFO">${list_city} = [{'id': 1566083, 'name': 'Thanh pho Ho Chi Minh', 'coord': {'lat': 10.75, 'lon': 106.6667}, 'main': {'temp': 300.15, 'feels_like': 303.78, 'temp_min': 300.15, 'temp_max': 300.15, 'pressure': 1009, 'hu...</msg>
<status status="PASS" starttime="20210420 04:22:16.348" endtime="20210420 04:22:16.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${lat}</var>
<arg>${list_city}[0][coord][lat]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.350" level="INFO">${lat} = 10.75</msg>
<status status="PASS" starttime="20210420 04:22:16.350" endtime="20210420 04:22:16.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${lng}</var>
<arg>${list_city}[0][coord][lon]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.351" level="INFO">${lng} = 106.6667</msg>
<status status="PASS" starttime="20210420 04:22:16.351" endtime="20210420 04:22:16.351"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${coord}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210420 04:22:16.352" level="INFO">${coord} = []</msg>
<status status="PASS" starttime="20210420 04:22:16.352" endtime="20210420 04:22:16.352"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${coord}</arg>
<arg>${lat}</arg>
<arg>${lng}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210420 04:22:16.352" endtime="20210420 04:22:16.353"/>
</kw>
<msg timestamp="20210420 04:22:16.353" level="INFO">${coord} = [10.75, 106.6667]</msg>
<status status="PASS" starttime="20210420 04:22:15.087" endtime="20210420 04:22:16.353"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${res}</var>
<arg>test-session</arg>
<arg>/data/2.5/onecall?lat=${coord}[0]&amp;lon=${coord}[1]&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02</arg>
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<msg timestamp="20210420 04:22:16.949" level="INFO">GET Request : url=https://openweathermap.org/data/2.5/onecall?lat=10.75&amp;lon=106.6667&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02 
 path_url=/data/2.5/onecall?lat=10.75&amp;lon=106.6667&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210420 04:22:16.949" level="INFO">GET Response : url=https://openweathermap.org/data/2.5/onecall?lat=10.75&amp;lon=106.6667&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02 
 status=200, reason=OK 
 body={"lat":10.75,"lon":106.6667,"timezone":"Asia/Ho_Chi_Minh","timezone_offset":25200,"current":{"dt":1618867313,"sunrise":1618871987,"sunset":1618916663,"temp":26,"feels_like":26,"pressure":1009,"humidity":94,"dew_point":24.96,"uvi":0,"clouds":40,"visibility":10000,"wind_speed":0.51,"wind_deg":310,"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]},"minutely":[{"dt":1618867320,"precipitation":0},{"dt":1618867380,"precipitation":0},{"dt":1618867440,"precipitation":0},{"dt":1618867500,"precipitation":0},{"dt":1618867560,"precipitation":0},{"dt":1618867620,"precipitation":0},{"dt":1618867680,"precipitation":0},{"dt":1618867740,"precipitation":0},{"dt":1618867800,"precipitation":0},{"dt":1618867860,"precipitation":0},{"dt":1618867920,"precipitation":0},{"dt":1618867980,"precipitation":0},{"dt":1618868040,"precipitation":0},{"dt":1618868100,"precipitation":0},{"dt":1618868160,"precipitation":0},{"dt":1618868220,"precipitation":0},{"dt":1618868280,"precipitation":0},{"dt":1618868340,"precipitation":0},{"dt":1618868400,"precipitation":0},{"dt":1618868460,"precipitation":0},{"dt":1618868520,"precipitation":0},{"dt":1618868580,"precipitation":0},{"dt":1618868640,"precipitation":0},{"dt":1618868700,"precipitation":0},{"dt":1618868760,"precipitation":0},{"dt":1618868820,"precipitation":0},{"dt":1618868880,"precipitation":0},{"dt":1618868940,"precipitation":0},{"dt":1618869000,"precipitation":0},{"dt":1618869060,"precipitation":0},{"dt":1618869120,"precipitation":0},{"dt":1618869180,"precipitation":0},{"dt":1618869240,"precipitation":0},{"dt":1618869300,"precipitation":0},{"dt":1618869360,"precipitation":0},{"dt":1618869420,"precipitation":0},{"dt":1618869480,"precipitation":0},{"dt":1618869540,"precipitation":0},{"dt":1618869600,"precipitation":0},{"dt":1618869660,"precipitation":0},{"dt":1618869720,"precipitation":0},{"dt":1618869780,"precipitation":0},{"dt":1618869840,"precipitation":0},{"dt":1618869900,"precipitation":0},{"dt":1618869960,"precipitation":0},{"dt":1618870020,"precipitation":0},{"dt":1618870080,"precipitation":0},{"dt":1618870140,"precipitation":0},{"dt":1618870200,"precipitation":0},{"dt":1618870260,"precipitation":0},{"dt":1618870320,"precipitation":0},{"dt":1618870380,"precipitation":0},{"dt":1618870440,"precipitation":0},{"dt":1618870500,"precipitation":0},{"dt":1618870560,"precipitation":0},{"dt":1618870620,"precipitation":0},{"dt":1618870680,"precipitation":0},{"dt":1618870740,"precipitation":0},{"dt":1618870800,"precipitation":0},{"dt":1618870860,"precipitation":0},{"dt":1618870920,"precipitation":0}],"hourly":[{"dt":1618866000,"temp":26,"feels_like":26,"pressure":1009,"humidity":94,"dew_point":24.96,"uvi":0,"clouds":40,"visibility":10000,"wind_speed":1.64,"wind_deg":212,"wind_gust":3.14,"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}],"pop":0.37},{"dt":1618869600,"temp":26.04,"feels_like":26.04,"pressure":1009,"humidity":91,"dew_point":24.45,"uvi":0,"clouds":52,"visibility":10000,"wind_speed":1.38,"wind_deg":197,"wind_gust":2.17,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}],"pop":0.4},{"dt":1618873200,"temp":26.07,"feels_like":26.07,"pressure":1009,"humidity":88,"dew_point":23.93,"uvi":0,"clouds":64,"visibility":10000,"wind_speed":1.39,"wind_deg":190,"wind_gust":2.21,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.45},{"dt":1618876800,"temp":26.79,"feels_like":29.45,"pressure":1010,"humidity":82,"dew_point":23.46,"uvi":0.81,"clouds":76,"visibility":10000,"wind_speed":1.32,"wind_deg":205,"wind_gust":2.13,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.45},{"dt":1618880400,"temp":28.38,"feels_like":31.73,"pressure":1011,"humidity":72,"dew_point":22.84,"uvi":2.72,"clouds":86,"visibility":10000,"wind_speed":1.9,"wind_deg":204,"wind_gust":2.6,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04d"}],"pop":0.11},{"dt":1618884000,"temp":30.53,"feels_like":33.65,"pressure":1011,"humidity":59,"dew_point":21.88,"uvi":5.82,"clouds":97,"visibility":10000,"wind_speed":2.36,"wind_deg":220,"wind_gust":2.73,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04d"}],"pop":0.11},{"dt":1618887600,"temp":32.2,"feels_like":35.25,"pressure":1011,"humidity":52,"dew_point":21.39,"uvi":9.24,"clouds":76,"visibility":10000,"wind_speed":2.63,"wind_deg":227,"wind_gust":3.03,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.11},{"dt":1618891200,"temp":33.72,"feels_like":36.56,"pressure":1010,"humidity":46,"dew_point":20.85,"uvi":6.8,"clouds":78,"visibility":10000,"wind_speed":2.83,"wind_deg":233,"wind_gust":3.21,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.11},{"dt":1618894800,"temp":34.94,"feels_like":37.41,"pressure":1009,"humidity":41,"dew_point":20.18,"uvi":7.28,"clouds":81,"visibility":10000,"wind_speed":2.98,"wind_deg":237,"wind_gust":3.24,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.19},{"dt":1618898400,"temp":35.69,"feels_like":37.88,"pressure":1007,"humidity":38,"dew_point":19.66,"uvi":6.57,"clouds":83,"visibility":10000,"wind_speed":2.93,"wind_deg":249,"wind_gust":3.31,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.19},{"dt":1618902000,"temp":34.63,"feels_like":36.54,"pressure":1006,"humidity":40,"dew_point":19.58,"uvi":2.34,"clouds":100,"visibility":10000,"wind_speed":2.84,"wind_deg":260,"wind_gust":3.61,"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10d"}],"pop":0.23,"rain":{"1h":0.1}},{"dt":1618905600,"temp":32.62,"feels_like":35.54,"pressure":1006,"humidity":50,"dew_point":21.05,"uvi":1.4,"clouds":100,"visibility":10000,"wind_speed":2.05,"wind_deg":240,"wind_gust":4,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04d"}],"pop":0.09},{"dt":1618909200,"temp":31.6,"feels_like":34.83,"pressure":1006,"humidity":55,"dew_point":21.64,"uvi":0.6,"clouds":100,"visibility":10000,"wind_speed":2.15,"wind_deg":223,"wind_gust":3.71,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04d"}],"pop":0.12},{"dt":1618912800,"temp":31.43,"feels_like":34.99,"pressure":1006,"humidity":57,"dew_point":21.95,"uvi":0.26,"clouds":100,"visibility":10000,"wind_speed":1.63,"wind_deg":221,"wind_gust":2.97,"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10d"}],"pop":0.33,"rain":{"1h":0.38}},{"dt":1618916400,"temp":31.04,"feels_like":34.68,"pressure":1007,"humidity":59,"dew_point":22.25,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":1.37,"wind_deg":190,"wind_gust":2.23,"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10d"}],"pop":0.33,"rain":{"1h":0.15}},{"dt":1618920000,"temp":30.42,"feels_like":34.1,"pressure":1008,"humidity":62,"dew_point":22.41,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":1.93,"wind_deg":167,"wind_gust":2.77,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.33},{"dt":1618923600,"temp":29.73,"feels_like":33.31,"pressure":1009,"humidity":65,"dew_point":22.55,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.61,"wind_deg":155,"wind_gust":4.01,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.15},{"dt":1618927200,"temp":29.26,"feels_like":32.91,"pressure":1009,"humidity":68,"dew_point":22.75,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.9,"wind_deg":163,"wind_gust":5.01,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.15},{"dt":1618930800,"temp":28.87,"feels_like":32.45,"pressure":1010,"humidity":70,"dew_point":22.95,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.86,"wind_deg":172,"wind_gust":5.22,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.23},{"dt":1618934400,"temp":28.48,"feels_like":31.94,"pressure":1010,"humidity":72,"dew_point":22.91,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.99,"wind_deg":187,"wind_gust":5.74,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.31},{"dt":1618938000,"temp":27.91,"feels_like":30.89,"pressure":1009,"humidity":73,"dew_point":22.84,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":3.15,"wind_deg":199,"wind_gust":6.13,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.23},{"dt":1618941600,"temp":27.54,"feels_like":30.37,"pressure":1009,"humidity":75,"dew_point":22.85,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.65,"wind_deg":208,"wind_gust":5.71,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.25},{"dt":1618945200,"temp":27.38,"feels_like":30.15,"pressure":1008,"humidity":76,"dew_point":22.88,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.35,"wind_deg":215,"wind_gust":5.21,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.24},{"dt":1618948800,"temp":27.21,"feels_like":29.9,"pressure":1008,"humidity":77,"dew_point":22.98,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.11,"wind_deg":217,"wind_gust":4.37,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.24},{"dt":1618952400,"temp":27.08,"feels_like":29.72,"pressure":1008,"humidity":78,"dew_point":23.04,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":1.9,"wind_deg":220,"wind_gust":3.8,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.28},{"dt":1618956000,"temp":27.02,"feels_like":29.6,"pressure":1008,"humidity":78,"dew_point":23.03,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":1.77,"wind_deg":218,"wind_gust":3.28,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.28},{"dt":1618959600,"t... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210420 04:22:16.949" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210420 04:22:16.354" endtime="20210420 04:22:16.949"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${body_data}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.953" level="INFO">${body_data} = {'lat': 10.75, 'lon': 106.6667, 'timezone': 'Asia/Ho_Chi_Minh', 'timezone_offset': 25200, 'current': {'dt': 1618867313, 'sunrise': 1618871987, 'sunset': 1618916663, 'temp': 26, 'feels_like': 26, 'pres...</msg>
<status status="PASS" starttime="20210420 04:22:16.950" endtime="20210420 04:22:16.953"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${temp}</var>
<arg>${body_data}[current][temp]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.954" level="INFO">${temp} = 26</msg>
<status status="PASS" starttime="20210420 04:22:16.953" endtime="20210420 04:22:16.954"/>
</kw>
<kw name="Convert Numb To Int" library="helper_func">
<var>${temp}</var>
<arg>${temp}</arg>
<kw name="Convert To Number" library="BuiltIn">
<var>${number}</var>
<arg>${number}</arg>
<arg>0</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20210420 04:22:16.955" level="INFO">${number} = 26.0</msg>
<status status="PASS" starttime="20210420 04:22:16.954" endtime="20210420 04:22:16.955"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${number}</var>
<arg>${number}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210420 04:22:16.956" level="INFO">${number} = 26</msg>
<status status="PASS" starttime="20210420 04:22:16.955" endtime="20210420 04:22:16.956"/>
</kw>
<msg timestamp="20210420 04:22:16.956" level="INFO">${temp} = 26</msg>
<status status="PASS" starttime="20210420 04:22:16.954" endtime="20210420 04:22:16.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${temp_feels_like}</var>
<arg>${body_data}[current][feels_like]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.957" level="INFO">${temp_feels_like} = 26</msg>
<status status="PASS" starttime="20210420 04:22:16.956" endtime="20210420 04:22:16.957"/>
</kw>
<kw name="Convert Numb To Int" library="helper_func">
<var>${temp_feels_like}</var>
<arg>${temp_feels_like}</arg>
<kw name="Convert To Number" library="BuiltIn">
<var>${number}</var>
<arg>${number}</arg>
<arg>0</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20210420 04:22:16.958" level="INFO">${number} = 26.0</msg>
<status status="PASS" starttime="20210420 04:22:16.957" endtime="20210420 04:22:16.958"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${number}</var>
<arg>${number}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210420 04:22:16.958" level="INFO">${number} = 26</msg>
<status status="PASS" starttime="20210420 04:22:16.958" endtime="20210420 04:22:16.958"/>
</kw>
<msg timestamp="20210420 04:22:16.959" level="INFO">${temp_feels_like} = 26</msg>
<status status="PASS" starttime="20210420 04:22:16.957" endtime="20210420 04:22:16.959"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${humidity}</var>
<arg>${body_data}[current][humidity]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.959" level="INFO">${humidity} = 94</msg>
<status status="PASS" starttime="20210420 04:22:16.959" endtime="20210420 04:22:16.959"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${pressure}</var>
<arg>${body_data}[current][pressure]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.960" level="INFO">${pressure} = 1009</msg>
<status status="PASS" starttime="20210420 04:22:16.959" endtime="20210420 04:22:16.960"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${wind}</var>
<arg>${body_data}[current][wind_speed]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.960" level="INFO">${wind} = 0.51</msg>
<status status="PASS" starttime="20210420 04:22:16.960" endtime="20210420 04:22:16.960"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${wind}</var>
<arg>${wind}</arg>
<arg>1</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20210420 04:22:16.961" level="INFO">${wind} = 0.5</msg>
<status status="PASS" starttime="20210420 04:22:16.960" endtime="20210420 04:22:16.961"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${visibility}</var>
<arg>${body_data}[current][visibility]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.961" level="INFO">${visibility} = 10000</msg>
<status status="PASS" starttime="20210420 04:22:16.961" endtime="20210420 04:22:16.961"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${visibility}</var>
<arg>${visibility}/1000</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:22:16.962" level="INFO">${visibility} = 10.0</msg>
<status status="PASS" starttime="20210420 04:22:16.961" endtime="20210420 04:22:16.962"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${weather_desc}</var>
<arg>${body_data}[current][weather][0][description]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.962" level="INFO">${weather_desc} = scattered clouds</msg>
<status status="PASS" starttime="20210420 04:22:16.962" endtime="20210420 04:22:16.962"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dew_point}</var>
<arg>${body_data}[current][dew_point]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:16.963" level="INFO">${dew_point} = 24.96</msg>
<status status="PASS" starttime="20210420 04:22:16.963" endtime="20210420 04:22:16.963"/>
</kw>
<kw name="Convert Numb To Int" library="helper_func">
<var>${dew_point}</var>
<arg>${dew_point}</arg>
<kw name="Convert To Number" library="BuiltIn">
<var>${number}</var>
<arg>${number}</arg>
<arg>0</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20210420 04:22:16.964" level="INFO">${number} = 25.0</msg>
<status status="PASS" starttime="20210420 04:22:16.963" endtime="20210420 04:22:16.964"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${number}</var>
<arg>${number}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210420 04:22:16.964" level="INFO">${number} = 25</msg>
<status status="PASS" starttime="20210420 04:22:16.964" endtime="20210420 04:22:16.964"/>
</kw>
<msg timestamp="20210420 04:22:16.965" level="INFO">${dew_point} = 25</msg>
<status status="PASS" starttime="20210420 04:22:16.963" endtime="20210420 04:22:16.965"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${weather_infos_data}</var>
<arg>${temp}</arg>
<arg>${temp_feels_like}</arg>
<arg>${weather_desc}</arg>
<arg>${humidity}</arg>
<arg>${pressure}</arg>
<arg>${wind}</arg>
<arg>${visibility}</arg>
<arg>${dew_point}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210420 04:22:16.965" level="INFO">${weather_infos_data} = [26, 26, 'scattered clouds', 94, 1009, 0.5, 10.0, 25]</msg>
<status status="PASS" starttime="20210420 04:22:16.965" endtime="20210420 04:22:16.966"/>
</kw>
<msg timestamp="20210420 04:22:16.966" level="INFO">${weather_infos_data} = [26, 26, 'scattered clouds', 94, 1009, 0.5, 10.0, 25]</msg>
<status status="PASS" starttime="20210420 04:22:15.087" endtime="20210420 04:22:16.966"/>
</kw>
<kw name="Select Option City" library="search_page">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_valid}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:16.967" endtime="20210420 04:22:16.982"/>
</kw>
<msg timestamp="20210420 04:22:16.982" level="INFO">${check_valid} = True</msg>
<status status="PASS" starttime="20210420 04:22:16.966" endtime="20210420 04:22:16.982"/>
</kw>
<if>
<branch type="IF" condition="'${check_valid}' == 'True'">
<kw name="Scroll And Click" library="helper_func">
<arg>${DROPDOWN_MENU}/li[1]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:16.983" endtime="20210420 04:22:16.997"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:22:16.997" endtime="20210420 04:22:17.272"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:17.273" level="INFO">Clicking element 'xpath://*[@class="search-dropdown-menu"]/li[1]'.</msg>
<status status="PASS" starttime="20210420 04:22:17.272" endtime="20210420 04:22:17.318"/>
</kw>
<status status="PASS" starttime="20210420 04:22:16.982" endtime="20210420 04:22:17.318"/>
</kw>
<status status="PASS" starttime="20210420 04:22:16.982" endtime="20210420 04:22:17.318"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>"There is no option to select"</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20210420 04:22:17.319" endtime="20210420 04:22:17.319"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:22:17.318" endtime="20210420 04:22:17.320"/>
</branch>
<status status="PASS" starttime="20210420 04:22:16.982" endtime="20210420 04:22:17.320"/>
</if>
<status status="PASS" starttime="20210420 04:22:16.966" endtime="20210420 04:22:17.320"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${weather_city_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210420 04:22:17.322" level="INFO">${weather_city_data} = ['Ho Chi Minh City', 'VN']</msg>
<status status="PASS" starttime="20210420 04:22:17.321" endtime="20210420 04:22:17.322"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${weather_infos_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210420 04:22:17.324" level="INFO">${weather_infos_data} = [26, 26, 'scattered clouds', 94, 1009, 0.5, 10.0, 25]</msg>
<status status="PASS" starttime="20210420 04:22:17.323" endtime="20210420 04:22:17.324"/>
</kw>
<status status="PASS" starttime="20210420 04:22:13.474" endtime="20210420 04:22:17.324"/>
</kw>
<kw name="Then verify that the information weather is displayed same as response data" library="search_step">
<kw name="Verify Weather Data" library="search_page">
<arg>${weather_city_data}</arg>
<arg>${weather_infos_data}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:22:17.327" endtime="20210420 04:22:18.877"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath://*[contains(@class,"weather-items")]//li</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:22:18.877" endtime="20210420 04:22:19.188"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_city_name}</var>
<arg>${CITY_NAME_CONTENT}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:19.188" endtime="20210420 04:22:19.204"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:19.220" level="INFO">${text} = Ho Chi Minh City, VN</msg>
<status status="PASS" starttime="20210420 04:22:19.204" endtime="20210420 04:22:19.220"/>
</kw>
<msg timestamp="20210420 04:22:19.221" level="INFO">${actual_city_name} = Ho Chi Minh City, VN</msg>
<status status="PASS" starttime="20210420 04:22:19.188" endtime="20210420 04:22:19.221"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_city_name}</var>
<arg>${weather_city_data}[0], ${weather_city_data}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:19.222" level="INFO">${expected_city_name} = Ho Chi Minh City, VN</msg>
<status status="PASS" starttime="20210420 04:22:19.221" endtime="20210420 04:22:19.222"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_temp}</var>
<arg>${CITY_TEMPERATURE_CONTENT}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:19.223" endtime="20210420 04:22:19.238"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:19.252" level="INFO">${text} = 26°C</msg>
<status status="PASS" starttime="20210420 04:22:19.238" endtime="20210420 04:22:19.252"/>
</kw>
<msg timestamp="20210420 04:22:19.253" level="INFO">${actual_temp} = 26°C</msg>
<status status="PASS" starttime="20210420 04:22:19.222" endtime="20210420 04:22:19.253"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_temp}</var>
<arg>${weather_infos_data}[0]°C</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:19.253" level="INFO">${expected_temp} = 26°C</msg>
<status status="PASS" starttime="20210420 04:22:19.253" endtime="20210420 04:22:19.253"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_temp_feels_like}</var>
<arg>${FEELS_LIKE_TEMPERATURE}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:19.254" endtime="20210420 04:22:19.271"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:19.288" level="INFO">${text} = Feels like 26°C. Scattered clouds. Light air</msg>
<status status="PASS" starttime="20210420 04:22:19.272" endtime="20210420 04:22:19.288"/>
</kw>
<msg timestamp="20210420 04:22:19.288" level="INFO">${actual_temp_feels_like} = Feels like 26°C. Scattered clouds. Light air</msg>
<status status="PASS" starttime="20210420 04:22:19.254" endtime="20210420 04:22:19.288"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${actual_temp_feels_like}</var>
<arg>${actual_temp_feels_like}</arg>
<arg>.[^.]*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210420 04:22:19.289" level="INFO">${actual_temp_feels_like} = ['Feels like 26°C', '. Scattered clouds', '. Light air']</msg>
<status status="PASS" starttime="20210420 04:22:19.288" endtime="20210420 04:22:19.289"/>
</kw>
<kw name="Get Weather Items" library="search_page">
<var>${actual_weather_items}</var>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${weather_items_length}</var>
<arg>${WEATHER_ITEMS}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20210420 04:22:19.295" level="INFO">${weather_items_length} = 5</msg>
<status status="PASS" starttime="20210420 04:22:19.289" endtime="20210420 04:22:19.295"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${weather_items_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210420 04:22:19.295" level="INFO">${weather_items_list} = []</msg>
<status status="PASS" starttime="20210420 04:22:19.295" endtime="20210420 04:22:19.295"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>1</value>
<value>${weather_items_length}+1</value>
<iter>
<var name="${i}">1</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${weather_item}</var>
<arg>xpath://*[contains(@class,"weather-items")]//li[${i}]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:19.296" endtime="20210420 04:22:19.314"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:19.331" level="INFO">${text} = 0.5m/s NW</msg>
<status status="PASS" starttime="20210420 04:22:19.315" endtime="20210420 04:22:19.331"/>
</kw>
<msg timestamp="20210420 04:22:19.331" level="INFO">${weather_item} = 0.5m/s NW</msg>
<status status="PASS" starttime="20210420 04:22:19.296" endtime="20210420 04:22:19.332"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${weather_items_list}</arg>
<arg>${weather_item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210420 04:22:19.332" endtime="20210420 04:22:19.332"/>
</kw>
<status status="PASS" starttime="20210420 04:22:19.296" endtime="20210420 04:22:19.332"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${weather_item}</var>
<arg>xpath://*[contains(@class,"weather-items")]//li[${i}]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:19.333" endtime="20210420 04:22:19.351"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:19.366" level="INFO">${text} = 1009hPa</msg>
<status status="PASS" starttime="20210420 04:22:19.351" endtime="20210420 04:22:19.366"/>
</kw>
<msg timestamp="20210420 04:22:19.366" level="INFO">${weather_item} = 1009hPa</msg>
<status status="PASS" starttime="20210420 04:22:19.332" endtime="20210420 04:22:19.366"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${weather_items_list}</arg>
<arg>${weather_item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210420 04:22:19.366" endtime="20210420 04:22:19.366"/>
</kw>
<status status="PASS" starttime="20210420 04:22:19.332" endtime="20210420 04:22:19.366"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${weather_item}</var>
<arg>xpath://*[contains(@class,"weather-items")]//li[${i}]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:19.367" endtime="20210420 04:22:19.392"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:19.409" level="INFO">${text} = Humidity:
94%</msg>
<status status="PASS" starttime="20210420 04:22:19.393" endtime="20210420 04:22:19.409"/>
</kw>
<msg timestamp="20210420 04:22:19.409" level="INFO">${weather_item} = Humidity:
94%</msg>
<status status="PASS" starttime="20210420 04:22:19.367" endtime="20210420 04:22:19.409"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${weather_items_list}</arg>
<arg>${weather_item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210420 04:22:19.410" endtime="20210420 04:22:19.410"/>
</kw>
<status status="PASS" starttime="20210420 04:22:19.367" endtime="20210420 04:22:19.410"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${weather_item}</var>
<arg>xpath://*[contains(@class,"weather-items")]//li[${i}]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:19.411" endtime="20210420 04:22:19.428"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:19.444" level="INFO">${text} = Dew point:
25°C</msg>
<status status="PASS" starttime="20210420 04:22:19.428" endtime="20210420 04:22:19.444"/>
</kw>
<msg timestamp="20210420 04:22:19.444" level="INFO">${weather_item} = Dew point:
25°C</msg>
<status status="PASS" starttime="20210420 04:22:19.411" endtime="20210420 04:22:19.444"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${weather_items_list}</arg>
<arg>${weather_item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210420 04:22:19.444" endtime="20210420 04:22:19.444"/>
</kw>
<status status="PASS" starttime="20210420 04:22:19.410" endtime="20210420 04:22:19.445"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${weather_item}</var>
<arg>xpath://*[contains(@class,"weather-items")]//li[${i}]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:22:19.445" endtime="20210420 04:22:19.462"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:22:19.479" level="INFO">${text} = Visibility:
10.0km</msg>
<status status="PASS" starttime="20210420 04:22:19.462" endtime="20210420 04:22:19.479"/>
</kw>
<msg timestamp="20210420 04:22:19.479" level="INFO">${weather_item} = Visibility:
10.0km</msg>
<status status="PASS" starttime="20210420 04:22:19.445" endtime="20210420 04:22:19.479"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${weather_items_list}</arg>
<arg>${weather_item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210420 04:22:19.479" endtime="20210420 04:22:19.480"/>
</kw>
<status status="PASS" starttime="20210420 04:22:19.445" endtime="20210420 04:22:19.480"/>
</iter>
<status status="PASS" starttime="20210420 04:22:19.295" endtime="20210420 04:22:19.480"/>
</for>
<msg timestamp="20210420 04:22:19.480" level="INFO">${actual_weather_items} = ['0.5m/s NW', '1009hPa', 'Humidity:\n94%', 'Dew point:\n25°C', 'Visibility:\n10.0km']</msg>
<status status="PASS" starttime="20210420 04:22:19.289" endtime="20210420 04:22:19.480"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_temp_feels_like}</var>
<arg>Feels like ${weather_infos_data}[1]°C</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:19.481" level="INFO">${expected_temp_feels_like} = Feels like 26°C</msg>
<status status="PASS" starttime="20210420 04:22:19.481" endtime="20210420 04:22:19.481"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_weather_desc}</var>
<arg>${weather_infos_data}[2]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:19.481" level="INFO">${expected_weather_desc} = scattered clouds</msg>
<status status="PASS" starttime="20210420 04:22:19.481" endtime="20210420 04:22:19.481"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_humidity}</var>
<arg>${weather_infos_data}[3]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:19.482" level="INFO">${expected_humidity} = 94</msg>
<status status="PASS" starttime="20210420 04:22:19.482" endtime="20210420 04:22:19.482"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_pressure}</var>
<arg>${weather_infos_data}[4]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:19.483" level="INFO">${expected_pressure} = 1009</msg>
<status status="PASS" starttime="20210420 04:22:19.482" endtime="20210420 04:22:19.483"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_wind}</var>
<arg>${weather_infos_data}[5]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:19.484" level="INFO">${expected_wind} = 0.5</msg>
<status status="PASS" starttime="20210420 04:22:19.483" endtime="20210420 04:22:19.484"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_visibility}</var>
<arg>${weather_infos_data}[6]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:19.484" level="INFO">${expected_visibility} = 10.0</msg>
<status status="PASS" starttime="20210420 04:22:19.484" endtime="20210420 04:22:19.484"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_dew_point}</var>
<arg>${weather_infos_data}[7]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:22:19.485" level="INFO">${expected_dew_point} = 25</msg>
<status status="PASS" starttime="20210420 04:22:19.484" endtime="20210420 04:22:19.485"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actual_city_name}</arg>
<arg>${expected_city_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210420 04:22:19.485" endtime="20210420 04:22:19.485"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actual_temp}</arg>
<arg>${expected_temp}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210420 04:22:19.485" endtime="20210420 04:22:19.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_temp_feels_like}[0]</arg>
<arg>${expected_temp_feels_like}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:22:19.486" endtime="20210420 04:22:19.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_temp_feels_like}[1]</arg>
<arg>${expected_weather_desc}</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:22:19.487" endtime="20210420 04:22:19.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_weather_items}[0]</arg>
<arg>${expected_wind}m/s</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:22:19.487" endtime="20210420 04:22:19.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>'${actual_weather_items}[1]'</arg>
<arg>'${expected_pressure}hPa'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:22:19.488" endtime="20210420 04:22:19.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>'${actual_weather_items}[2]'</arg>
<arg>'Humidity:\n${expected_humidity}%'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:22:19.489" endtime="20210420 04:22:19.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>'${actual_weather_items}[3]'</arg>
<arg>'Dew point:\n${expected_dew_point}°C'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:22:19.490" endtime="20210420 04:22:19.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>'${actual_weather_items}[4]'</arg>
<arg>'Visibility:\n${expected_visibility}km'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:22:19.490" endtime="20210420 04:22:19.491"/>
</kw>
<status status="PASS" starttime="20210420 04:22:17.326" endtime="20210420 04:22:19.491"/>
</kw>
<status status="PASS" starttime="20210420 04:22:17.325" endtime="20210420 04:22:19.491"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:22:19.492" endtime="20210420 04:22:19.566"/>
</kw>
<status status="PASS" starttime="20210420 04:22:19.491" endtime="20210420 04:22:19.566"/>
</kw>
<tag>TC-verify_that_information_weather_is_displayed_same_as_data</tag>
<status status="PASS" starttime="20210420 04:22:04.572" endtime="20210420 04:22:19.566"/>
</test>
<doc>Test Suites for Searching weather</doc>
<status status="FAIL" starttime="20210420 04:21:31.526" endtime="20210420 04:22:19.568"/>
</suite>
<status status="FAIL" starttime="20210420 04:21:31.524" endtime="20210420 04:22:19.571"/>
</suite>
<status status="FAIL" starttime="20210420 04:21:31.504" endtime="20210420 04:22:19.572"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">TC-can_change from_metric_to_imperial</stat>
<stat pass="1" fail="0" skip="0">TC-can_search_city</stat>
<stat pass="0" fail="1" skip="0">TC-can_select_options_city</stat>
<stat pass="1" fail="0" skip="0">TC-verify_that_information_weather_is_displayed_same_as_data</stat>
</tag>
<suite>
<stat pass="3" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="3" fail="1" skip="0" id="s1-s1" name="SearchTheCityTest">Tests.SearchTheCityTest</stat>
<stat pass="3" fail="1" skip="0" id="s1-s1-s1" name="Search Weather">Tests.SearchTheCityTest.Search Weather</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210420 04:22:19.575" level="ERROR">RuntimeError catched in remotelib keyword execution. Maybe there is no connection - is pabot called with --pabotlib option? ErrorDetails: RuntimeError('Connection to remote server broken: [Errno 61] Connection refused')</msg>
</errors>
</robot>
