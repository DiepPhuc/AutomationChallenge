<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0 (Python 3.8.5 on darwin)" generated="20210420 04:48:10.443" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="/Users/macbookpro/Desktop/AutomationChallenge/tests">
<suite id="s1-s1" name="DataDrivenTest" source="/Users/macbookpro/Desktop/AutomationChallenge/tests/DataDrivenTest">
<suite id="s1-s1-s1" name="Search Weather" source="/Users/macbookpro/Desktop/AutomationChallenge/tests/DataDrivenTest/search_weather.robot">
<test id="s1-s1-s1-t1" name="Verify Searching Weather">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:14.822" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:47:14.821" endtime="20210420 04:47:14.822"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:14.823" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7feb62bb2cd0&gt;</msg>
<status status="PASS" starttime="20210420 04:47:14.823" endtime="20210420 04:47:14.823"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:14.823" endtime="20210420 04:47:14.824"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.823" endtime="20210420 04:47:14.824"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:14.825" endtime="20210420 04:47:14.825"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:14.825" endtime="20210420 04:47:14.826"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.825" endtime="20210420 04:47:14.826"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.824" endtime="20210420 04:47:14.826"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:47:14.826" endtime="20210420 04:47:14.826"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:47:14.827" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:47:14.826" endtime="20210420 04:47:16.236"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.822" endtime="20210420 04:47:16.236"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.822" endtime="20210420 04:47:16.236"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:47:16.237" endtime="20210420 04:47:16.343"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:47:16.343" endtime="20210420 04:47:16.344"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:16.345" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:16.345" endtime="20210420 04:47:21.737"/>
</kw>
<status status="PASS" starttime="20210420 04:47:16.344" endtime="20210420 04:47:21.737"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:47:21.739" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:47:21.738" endtime="20210420 04:47:21.739"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.821" endtime="20210420 04:47:21.739"/>
</kw>
<kw name="Searching Weather">
<arg>Thanh pho Ho Chi Minh</arg>
<kw name="Input City" library="search_page">
<arg>${country}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:47:21.741" endtime="20210420 04:47:21.800"/>
</kw>
<kw name="Scroll And Click" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:21.800" endtime="20210420 04:47:21.824"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:21.824" endtime="20210420 04:47:22.098"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:22.098" level="INFO">Clicking element 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:22.098" endtime="20210420 04:47:22.162"/>
</kw>
<status status="PASS" starttime="20210420 04:47:21.800" endtime="20210420 04:47:22.162"/>
</kw>
<kw name="Wait And Input" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<arg>${the_city}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_input} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:22.163" endtime="20210420 04:47:22.196"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:22.196" level="INFO">Typing text 'Thanh pho Ho Chi Minh' into text field 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:22.196" endtime="20210420 04:47:22.357"/>
</kw>
<status status="PASS" starttime="20210420 04:47:22.162" endtime="20210420 04:47:22.357"/>
</kw>
<status status="PASS" starttime="20210420 04:47:21.740" endtime="20210420 04:47:22.357"/>
</kw>
<kw name="Submit Field" library="search_page">
<kw name="Scroll And Click" library="helper_func">
<arg>${SUBMIT_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:22.358" endtime="20210420 04:47:22.421"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:22.422" endtime="20210420 04:47:22.716"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:22.717" level="INFO">Clicking element 'xpath://*[@class="search"]/button'.</msg>
<status status="PASS" starttime="20210420 04:47:22.716" endtime="20210420 04:47:22.772"/>
</kw>
<status status="PASS" starttime="20210420 04:47:22.358" endtime="20210420 04:47:22.772"/>
</kw>
<status status="PASS" starttime="20210420 04:47:22.357" endtime="20210420 04:47:22.772"/>
</kw>
<kw name="Verify Results" library="search_page">
<arg>${country}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_valid}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:22.773" endtime="20210420 04:47:23.421"/>
</kw>
<msg timestamp="20210420 04:47:23.421" level="INFO">${check_valid} = True</msg>
<status status="PASS" starttime="20210420 04:47:22.773" endtime="20210420 04:47:23.421"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count_result}</var>
<arg>${DROPDOWN_MENU}/li</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20210420 04:47:23.428" level="INFO">${count_result} = 1</msg>
<status status="PASS" starttime="20210420 04:47:23.421" endtime="20210420 04:47:23.428"/>
</kw>
<if>
<branch type="IF" condition="'${check_valid}' == 'True'">
<if>
<branch type="IF" condition="${count_result} &gt; 1">
<for flavor="IN RANGE">
<var>${i}</var>
<value>1</value>
<value>${count_result}+1</value>
<iter>
<var name="${i}">${i}</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li[${i}]/span</arg>
<status status="NOT RUN" starttime="20210420 04:47:23.429" endtime="20210420 04:47:23.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210420 04:47:23.429" endtime="20210420 04:47:23.429"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:23.429" endtime="20210420 04:47:23.429"/>
</iter>
<status status="NOT RUN" starttime="20210420 04:47:23.429" endtime="20210420 04:47:23.429"/>
</for>
<status status="NOT RUN" starttime="20210420 04:47:23.429" endtime="20210420 04:47:23.429"/>
</branch>
<branch type="ELSE">
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li/span</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:23.430" endtime="20210420 04:47:23.445"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:23.460" level="INFO">${text} = Thanh pho Ho Chi Minh, VN</msg>
<status status="PASS" starttime="20210420 04:47:23.445" endtime="20210420 04:47:23.460"/>
</kw>
<msg timestamp="20210420 04:47:23.460" level="INFO">${result} = Thanh pho Ho Chi Minh, VN</msg>
<status status="PASS" starttime="20210420 04:47:23.430" endtime="20210420 04:47:23.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:47:23.460" endtime="20210420 04:47:23.461"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.430" endtime="20210420 04:47:23.461"/>
</branch>
<status status="PASS" starttime="20210420 04:47:23.429" endtime="20210420 04:47:23.461"/>
</if>
<status status="PASS" starttime="20210420 04:47:23.429" endtime="20210420 04:47:23.461"/>
</branch>
<branch type="ELSE">
<kw name="Verify No Result" library="search_page">
<status status="NOT RUN" starttime="20210420 04:47:23.461" endtime="20210420 04:47:23.461"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:23.461" endtime="20210420 04:47:23.461"/>
</branch>
<status status="PASS" starttime="20210420 04:47:23.428" endtime="20210420 04:47:23.461"/>
</if>
<status status="PASS" starttime="20210420 04:47:22.773" endtime="20210420 04:47:23.461"/>
</kw>
<status status="PASS" starttime="20210420 04:47:21.740" endtime="20210420 04:47:23.462"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:47:23.462" endtime="20210420 04:47:23.540"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.462" endtime="20210420 04:47:23.541"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.820" endtime="20210420 04:47:23.541"/>
</test>
<test id="s1-s1-s1-t2" name="Verify Searching Weather">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:23.544" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:47:23.544" endtime="20210420 04:47:23.544"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:23.546" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7feb62bf4340&gt;</msg>
<status status="PASS" starttime="20210420 04:47:23.545" endtime="20210420 04:47:23.546"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:23.546" endtime="20210420 04:47:23.546"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.546" endtime="20210420 04:47:23.546"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:23.547" endtime="20210420 04:47:23.547"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:23.547" endtime="20210420 04:47:23.548"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.547" endtime="20210420 04:47:23.548"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.546" endtime="20210420 04:47:23.548"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:47:23.548" endtime="20210420 04:47:23.548"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:47:23.549" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:47:23.548" endtime="20210420 04:47:25.033"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.545" endtime="20210420 04:47:25.033"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.544" endtime="20210420 04:47:25.033"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:47:25.033" endtime="20210420 04:47:25.140"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:47:25.140" endtime="20210420 04:47:25.141"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:25.142" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:25.142" endtime="20210420 04:47:30.197"/>
</kw>
<status status="PASS" starttime="20210420 04:47:25.141" endtime="20210420 04:47:30.197"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:47:30.198" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:47:30.197" endtime="20210420 04:47:30.198"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.543" endtime="20210420 04:47:30.198"/>
</kw>
<kw name="Searching Weather">
<arg>London</arg>
<kw name="Input City" library="search_page">
<arg>${country}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:47:30.199" endtime="20210420 04:47:30.216"/>
</kw>
<kw name="Scroll And Click" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:30.217" endtime="20210420 04:47:30.241"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:30.242" endtime="20210420 04:47:30.552"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:30.553" level="INFO">Clicking element 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:30.552" endtime="20210420 04:47:30.645"/>
</kw>
<status status="PASS" starttime="20210420 04:47:30.216" endtime="20210420 04:47:30.645"/>
</kw>
<kw name="Wait And Input" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<arg>${the_city}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_input} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:30.646" endtime="20210420 04:47:30.664"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:30.664" level="INFO">Typing text 'London' into text field 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:30.664" endtime="20210420 04:47:30.820"/>
</kw>
<status status="PASS" starttime="20210420 04:47:30.645" endtime="20210420 04:47:30.820"/>
</kw>
<status status="PASS" starttime="20210420 04:47:30.199" endtime="20210420 04:47:30.820"/>
</kw>
<kw name="Submit Field" library="search_page">
<kw name="Scroll And Click" library="helper_func">
<arg>${SUBMIT_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:30.821" endtime="20210420 04:47:30.881"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:30.881" endtime="20210420 04:47:31.151"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:31.152" level="INFO">Clicking element 'xpath://*[@class="search"]/button'.</msg>
<status status="PASS" starttime="20210420 04:47:31.152" endtime="20210420 04:47:31.189"/>
</kw>
<status status="PASS" starttime="20210420 04:47:30.821" endtime="20210420 04:47:31.189"/>
</kw>
<status status="PASS" starttime="20210420 04:47:30.821" endtime="20210420 04:47:31.190"/>
</kw>
<kw name="Verify Results" library="search_page">
<arg>${country}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_valid}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:31.190" endtime="20210420 04:47:31.866"/>
</kw>
<msg timestamp="20210420 04:47:31.866" level="INFO">${check_valid} = True</msg>
<status status="PASS" starttime="20210420 04:47:31.190" endtime="20210420 04:47:31.866"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count_result}</var>
<arg>${DROPDOWN_MENU}/li</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20210420 04:47:31.872" level="INFO">${count_result} = 5</msg>
<status status="PASS" starttime="20210420 04:47:31.866" endtime="20210420 04:47:31.873"/>
</kw>
<if>
<branch type="IF" condition="'${check_valid}' == 'True'">
<if>
<branch type="IF" condition="${count_result} &gt; 1">
<for flavor="IN RANGE">
<var>${i}</var>
<value>1</value>
<value>${count_result}+1</value>
<iter>
<var name="${i}">1</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li[${i}]/span</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:31.874" endtime="20210420 04:47:31.892"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:31.913" level="INFO">${text} = London, GB</msg>
<status status="PASS" starttime="20210420 04:47:31.892" endtime="20210420 04:47:31.913"/>
</kw>
<msg timestamp="20210420 04:47:31.914" level="INFO">${result} = London, GB</msg>
<status status="PASS" starttime="20210420 04:47:31.873" endtime="20210420 04:47:31.914"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:47:31.914" endtime="20210420 04:47:31.915"/>
</kw>
<status status="PASS" starttime="20210420 04:47:31.873" endtime="20210420 04:47:31.915"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li[${i}]/span</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:31.916" endtime="20210420 04:47:31.933"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:31.953" level="INFO">${text} = London, CA</msg>
<status status="PASS" starttime="20210420 04:47:31.933" endtime="20210420 04:47:31.953"/>
</kw>
<msg timestamp="20210420 04:47:31.954" level="INFO">${result} = London, CA</msg>
<status status="PASS" starttime="20210420 04:47:31.915" endtime="20210420 04:47:31.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:47:31.954" endtime="20210420 04:47:31.954"/>
</kw>
<status status="PASS" starttime="20210420 04:47:31.915" endtime="20210420 04:47:31.954"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li[${i}]/span</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:31.955" endtime="20210420 04:47:31.972"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:31.988" level="INFO">${text} = London, US</msg>
<status status="PASS" starttime="20210420 04:47:31.972" endtime="20210420 04:47:31.989"/>
</kw>
<msg timestamp="20210420 04:47:31.989" level="INFO">${result} = London, US</msg>
<status status="PASS" starttime="20210420 04:47:31.954" endtime="20210420 04:47:31.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:47:31.989" endtime="20210420 04:47:31.989"/>
</kw>
<status status="PASS" starttime="20210420 04:47:31.954" endtime="20210420 04:47:31.989"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li[${i}]/span</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:31.990" endtime="20210420 04:47:32.008"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:32.028" level="INFO">${text} = London, US</msg>
<status status="PASS" starttime="20210420 04:47:32.008" endtime="20210420 04:47:32.028"/>
</kw>
<msg timestamp="20210420 04:47:32.029" level="INFO">${result} = London, US</msg>
<status status="PASS" starttime="20210420 04:47:31.990" endtime="20210420 04:47:32.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:47:32.029" endtime="20210420 04:47:32.029"/>
</kw>
<status status="PASS" starttime="20210420 04:47:31.989" endtime="20210420 04:47:32.029"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li[${i}]/span</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:32.030" endtime="20210420 04:47:32.046"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:32.062" level="INFO">${text} = London, US</msg>
<status status="PASS" starttime="20210420 04:47:32.046" endtime="20210420 04:47:32.062"/>
</kw>
<msg timestamp="20210420 04:47:32.062" level="INFO">${result} = London, US</msg>
<status status="PASS" starttime="20210420 04:47:32.030" endtime="20210420 04:47:32.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:47:32.062" endtime="20210420 04:47:32.063"/>
</kw>
<status status="PASS" starttime="20210420 04:47:32.029" endtime="20210420 04:47:32.063"/>
</iter>
<status status="PASS" starttime="20210420 04:47:31.873" endtime="20210420 04:47:32.063"/>
</for>
<status status="PASS" starttime="20210420 04:47:31.873" endtime="20210420 04:47:32.063"/>
</branch>
<branch type="ELSE">
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li/span</arg>
<status status="NOT RUN" starttime="20210420 04:47:32.063" endtime="20210420 04:47:32.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210420 04:47:32.063" endtime="20210420 04:47:32.063"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:32.063" endtime="20210420 04:47:32.063"/>
</branch>
<status status="PASS" starttime="20210420 04:47:31.873" endtime="20210420 04:47:32.064"/>
</if>
<status status="PASS" starttime="20210420 04:47:31.873" endtime="20210420 04:47:32.064"/>
</branch>
<branch type="ELSE">
<kw name="Verify No Result" library="search_page">
<status status="NOT RUN" starttime="20210420 04:47:32.064" endtime="20210420 04:47:32.064"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:32.064" endtime="20210420 04:47:32.064"/>
</branch>
<status status="PASS" starttime="20210420 04:47:31.873" endtime="20210420 04:47:32.064"/>
</if>
<status status="PASS" starttime="20210420 04:47:31.190" endtime="20210420 04:47:32.064"/>
</kw>
<status status="PASS" starttime="20210420 04:47:30.198" endtime="20210420 04:47:32.064"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:47:32.065" endtime="20210420 04:47:32.147"/>
</kw>
<status status="PASS" starttime="20210420 04:47:32.064" endtime="20210420 04:47:32.148"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.542" endtime="20210420 04:47:32.148"/>
</test>
<test id="s1-s1-s1-t3" name="Verify Searching Weather">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:32.152" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:47:32.151" endtime="20210420 04:47:32.152"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:32.155" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7feb62c1b190&gt;</msg>
<status status="PASS" starttime="20210420 04:47:32.154" endtime="20210420 04:47:32.155"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:32.156" endtime="20210420 04:47:32.156"/>
</kw>
<status status="PASS" starttime="20210420 04:47:32.155" endtime="20210420 04:47:32.156"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:32.157" endtime="20210420 04:47:32.158"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:32.158" endtime="20210420 04:47:32.158"/>
</kw>
<status status="PASS" starttime="20210420 04:47:32.157" endtime="20210420 04:47:32.158"/>
</kw>
<status status="PASS" starttime="20210420 04:47:32.156" endtime="20210420 04:47:32.158"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:47:32.158" endtime="20210420 04:47:32.159"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:47:32.159" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:47:32.159" endtime="20210420 04:47:33.504"/>
</kw>
<status status="PASS" starttime="20210420 04:47:32.153" endtime="20210420 04:47:33.504"/>
</kw>
<status status="PASS" starttime="20210420 04:47:32.153" endtime="20210420 04:47:33.504"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:47:33.505" endtime="20210420 04:47:33.611"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:47:33.611" endtime="20210420 04:47:33.612"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:33.613" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:33.612" endtime="20210420 04:47:38.814"/>
</kw>
<status status="PASS" starttime="20210420 04:47:33.612" endtime="20210420 04:47:38.815"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:47:38.819" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:47:38.816" endtime="20210420 04:47:38.820"/>
</kw>
<status status="PASS" starttime="20210420 04:47:32.150" endtime="20210420 04:47:38.820"/>
</kw>
<kw name="Searching Weather">
<arg>Germany</arg>
<kw name="Input City" library="search_page">
<arg>${country}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:47:38.822" endtime="20210420 04:47:38.832"/>
</kw>
<kw name="Scroll And Click" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:38.833" endtime="20210420 04:47:38.853"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:38.853" endtime="20210420 04:47:39.130"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:39.131" level="INFO">Clicking element 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:39.130" endtime="20210420 04:47:39.202"/>
</kw>
<status status="PASS" starttime="20210420 04:47:38.832" endtime="20210420 04:47:39.202"/>
</kw>
<kw name="Wait And Input" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<arg>${the_city}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_input} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:39.203" endtime="20210420 04:47:39.219"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:39.220" level="INFO">Typing text 'Germany' into text field 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:39.219" endtime="20210420 04:47:39.297"/>
</kw>
<status status="PASS" starttime="20210420 04:47:39.203" endtime="20210420 04:47:39.298"/>
</kw>
<status status="PASS" starttime="20210420 04:47:38.821" endtime="20210420 04:47:39.298"/>
</kw>
<kw name="Submit Field" library="search_page">
<kw name="Scroll And Click" library="helper_func">
<arg>${SUBMIT_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:39.299" endtime="20210420 04:47:39.318"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:39.319" endtime="20210420 04:47:39.599"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:39.600" level="INFO">Clicking element 'xpath://*[@class="search"]/button'.</msg>
<status status="PASS" starttime="20210420 04:47:39.599" endtime="20210420 04:47:39.635"/>
</kw>
<status status="PASS" starttime="20210420 04:47:39.298" endtime="20210420 04:47:39.635"/>
</kw>
<status status="PASS" starttime="20210420 04:47:39.298" endtime="20210420 04:47:39.635"/>
</kw>
<kw name="Verify Results" library="search_page">
<arg>${country}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_valid}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:39.636" endtime="20210420 04:47:40.293"/>
</kw>
<msg timestamp="20210420 04:47:40.293" level="INFO">${check_valid} = True</msg>
<status status="PASS" starttime="20210420 04:47:39.636" endtime="20210420 04:47:40.293"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count_result}</var>
<arg>${DROPDOWN_MENU}/li</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20210420 04:47:40.306" level="INFO">${count_result} = 1</msg>
<status status="PASS" starttime="20210420 04:47:40.294" endtime="20210420 04:47:40.306"/>
</kw>
<if>
<branch type="IF" condition="'${check_valid}' == 'True'">
<if>
<branch type="IF" condition="${count_result} &gt; 1">
<for flavor="IN RANGE">
<var>${i}</var>
<value>1</value>
<value>${count_result}+1</value>
<iter>
<var name="${i}">${i}</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li[${i}]/span</arg>
<status status="NOT RUN" starttime="20210420 04:47:40.306" endtime="20210420 04:47:40.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210420 04:47:40.306" endtime="20210420 04:47:40.307"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:40.306" endtime="20210420 04:47:40.307"/>
</iter>
<status status="NOT RUN" starttime="20210420 04:47:40.306" endtime="20210420 04:47:40.307"/>
</for>
<status status="NOT RUN" starttime="20210420 04:47:40.306" endtime="20210420 04:47:40.307"/>
</branch>
<branch type="ELSE">
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li/span</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:40.307" endtime="20210420 04:47:40.329"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:40.351" level="INFO">${text} = Federal Republic of Germany, DE</msg>
<status status="PASS" starttime="20210420 04:47:40.329" endtime="20210420 04:47:40.351"/>
</kw>
<msg timestamp="20210420 04:47:40.352" level="INFO">${result} = Federal Republic of Germany, DE</msg>
<status status="PASS" starttime="20210420 04:47:40.307" endtime="20210420 04:47:40.352"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:47:40.352" endtime="20210420 04:47:40.352"/>
</kw>
<status status="PASS" starttime="20210420 04:47:40.307" endtime="20210420 04:47:40.352"/>
</branch>
<status status="PASS" starttime="20210420 04:47:40.306" endtime="20210420 04:47:40.352"/>
</if>
<status status="PASS" starttime="20210420 04:47:40.306" endtime="20210420 04:47:40.352"/>
</branch>
<branch type="ELSE">
<kw name="Verify No Result" library="search_page">
<status status="NOT RUN" starttime="20210420 04:47:40.352" endtime="20210420 04:47:40.352"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:40.352" endtime="20210420 04:47:40.352"/>
</branch>
<status status="PASS" starttime="20210420 04:47:40.306" endtime="20210420 04:47:40.352"/>
</if>
<status status="PASS" starttime="20210420 04:47:39.635" endtime="20210420 04:47:40.353"/>
</kw>
<status status="PASS" starttime="20210420 04:47:38.821" endtime="20210420 04:47:40.353"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:47:40.353" endtime="20210420 04:47:40.424"/>
</kw>
<status status="PASS" starttime="20210420 04:47:40.353" endtime="20210420 04:47:40.424"/>
</kw>
<status status="PASS" starttime="20210420 04:47:32.149" endtime="20210420 04:47:40.424"/>
</test>
<test id="s1-s1-s1-t4" name="Verify Searching Weather">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:40.428" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:47:40.427" endtime="20210420 04:47:40.428"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:40.429" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7feb62c0f070&gt;</msg>
<status status="PASS" starttime="20210420 04:47:40.428" endtime="20210420 04:47:40.429"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:40.429" endtime="20210420 04:47:40.429"/>
</kw>
<status status="PASS" starttime="20210420 04:47:40.429" endtime="20210420 04:47:40.429"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:40.430" endtime="20210420 04:47:40.430"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:40.430" endtime="20210420 04:47:40.430"/>
</kw>
<status status="PASS" starttime="20210420 04:47:40.430" endtime="20210420 04:47:40.431"/>
</kw>
<status status="PASS" starttime="20210420 04:47:40.429" endtime="20210420 04:47:40.431"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:47:40.431" endtime="20210420 04:47:40.431"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:47:40.431" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:47:40.431" endtime="20210420 04:47:41.804"/>
</kw>
<status status="PASS" starttime="20210420 04:47:40.428" endtime="20210420 04:47:41.804"/>
</kw>
<status status="PASS" starttime="20210420 04:47:40.428" endtime="20210420 04:47:41.804"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:47:41.805" endtime="20210420 04:47:41.911"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:47:41.912" endtime="20210420 04:47:41.912"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:41.914" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:41.913" endtime="20210420 04:47:47.324"/>
</kw>
<status status="PASS" starttime="20210420 04:47:41.913" endtime="20210420 04:47:47.324"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:47:47.325" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:47:47.324" endtime="20210420 04:47:47.326"/>
</kw>
<status status="PASS" starttime="20210420 04:47:40.427" endtime="20210420 04:47:47.326"/>
</kw>
<kw name="Searching Weather">
<arg>Australia</arg>
<kw name="Input City" library="search_page">
<arg>${country}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:47:47.328" endtime="20210420 04:47:47.337"/>
</kw>
<kw name="Scroll And Click" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:47.338" endtime="20210420 04:47:47.356"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:47.356" endtime="20210420 04:47:47.632"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:47.632" level="INFO">Clicking element 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:47.632" endtime="20210420 04:47:47.697"/>
</kw>
<status status="PASS" starttime="20210420 04:47:47.338" endtime="20210420 04:47:47.697"/>
</kw>
<kw name="Wait And Input" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<arg>${the_city}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_input} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:47.699" endtime="20210420 04:47:47.714"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:47.714" level="INFO">Typing text 'Australia' into text field 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:47.714" endtime="20210420 04:47:47.793"/>
</kw>
<status status="PASS" starttime="20210420 04:47:47.698" endtime="20210420 04:47:47.793"/>
</kw>
<status status="PASS" starttime="20210420 04:47:47.326" endtime="20210420 04:47:47.794"/>
</kw>
<kw name="Submit Field" library="search_page">
<kw name="Scroll And Click" library="helper_func">
<arg>${SUBMIT_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:47.794" endtime="20210420 04:47:47.810"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:47.810" endtime="20210420 04:47:48.087"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:48.088" level="INFO">Clicking element 'xpath://*[@class="search"]/button'.</msg>
<status status="PASS" starttime="20210420 04:47:48.087" endtime="20210420 04:47:48.179"/>
</kw>
<status status="PASS" starttime="20210420 04:47:47.794" endtime="20210420 04:47:48.179"/>
</kw>
<status status="PASS" starttime="20210420 04:47:47.794" endtime="20210420 04:47:48.179"/>
</kw>
<kw name="Verify Results" library="search_page">
<arg>${country}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_valid}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:48.180" endtime="20210420 04:47:48.826"/>
</kw>
<msg timestamp="20210420 04:47:48.826" level="INFO">${check_valid} = True</msg>
<status status="PASS" starttime="20210420 04:47:48.179" endtime="20210420 04:47:48.826"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count_result}</var>
<arg>${DROPDOWN_MENU}/li</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20210420 04:47:48.832" level="INFO">${count_result} = 1</msg>
<status status="PASS" starttime="20210420 04:47:48.826" endtime="20210420 04:47:48.832"/>
</kw>
<if>
<branch type="IF" condition="'${check_valid}' == 'True'">
<if>
<branch type="IF" condition="${count_result} &gt; 1">
<for flavor="IN RANGE">
<var>${i}</var>
<value>1</value>
<value>${count_result}+1</value>
<iter>
<var name="${i}">${i}</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li[${i}]/span</arg>
<status status="NOT RUN" starttime="20210420 04:47:48.833" endtime="20210420 04:47:48.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210420 04:47:48.833" endtime="20210420 04:47:48.833"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:48.833" endtime="20210420 04:47:48.833"/>
</iter>
<status status="NOT RUN" starttime="20210420 04:47:48.833" endtime="20210420 04:47:48.833"/>
</for>
<status status="NOT RUN" starttime="20210420 04:47:48.833" endtime="20210420 04:47:48.833"/>
</branch>
<branch type="ELSE">
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li/span</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:48.834" endtime="20210420 04:47:48.850"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:48.865" level="INFO">${text} = Commonwealth of Australia, AU</msg>
<status status="PASS" starttime="20210420 04:47:48.850" endtime="20210420 04:47:48.865"/>
</kw>
<msg timestamp="20210420 04:47:48.865" level="INFO">${result} = Commonwealth of Australia, AU</msg>
<status status="PASS" starttime="20210420 04:47:48.833" endtime="20210420 04:47:48.865"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:47:48.865" endtime="20210420 04:47:48.866"/>
</kw>
<status status="PASS" starttime="20210420 04:47:48.833" endtime="20210420 04:47:48.866"/>
</branch>
<status status="PASS" starttime="20210420 04:47:48.833" endtime="20210420 04:47:48.866"/>
</if>
<status status="PASS" starttime="20210420 04:47:48.833" endtime="20210420 04:47:48.866"/>
</branch>
<branch type="ELSE">
<kw name="Verify No Result" library="search_page">
<status status="NOT RUN" starttime="20210420 04:47:48.866" endtime="20210420 04:47:48.866"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:48.866" endtime="20210420 04:47:48.866"/>
</branch>
<status status="PASS" starttime="20210420 04:47:48.832" endtime="20210420 04:47:48.866"/>
</if>
<status status="PASS" starttime="20210420 04:47:48.179" endtime="20210420 04:47:48.866"/>
</kw>
<status status="PASS" starttime="20210420 04:47:47.326" endtime="20210420 04:47:48.866"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:47:48.867" endtime="20210420 04:47:48.941"/>
</kw>
<status status="PASS" starttime="20210420 04:47:48.866" endtime="20210420 04:47:48.942"/>
</kw>
<status status="PASS" starttime="20210420 04:47:40.425" endtime="20210420 04:47:48.942"/>
</test>
<test id="s1-s1-s1-t5" name="Verify Searching Weather">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:48.946" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:47:48.946" endtime="20210420 04:47:48.946"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:48.947" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7feb62c31310&gt;</msg>
<status status="PASS" starttime="20210420 04:47:48.947" endtime="20210420 04:47:48.947"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:48.948" endtime="20210420 04:47:48.948"/>
</kw>
<status status="PASS" starttime="20210420 04:47:48.947" endtime="20210420 04:47:48.948"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:48.949" endtime="20210420 04:47:48.949"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:48.949" endtime="20210420 04:47:48.949"/>
</kw>
<status status="PASS" starttime="20210420 04:47:48.949" endtime="20210420 04:47:48.949"/>
</kw>
<status status="PASS" starttime="20210420 04:47:48.948" endtime="20210420 04:47:48.950"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:47:48.950" endtime="20210420 04:47:48.950"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:47:48.950" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:47:48.950" endtime="20210420 04:47:50.275"/>
</kw>
<status status="PASS" starttime="20210420 04:47:48.946" endtime="20210420 04:47:50.275"/>
</kw>
<status status="PASS" starttime="20210420 04:47:48.946" endtime="20210420 04:47:50.275"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:47:50.275" endtime="20210420 04:47:50.383"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:47:50.383" endtime="20210420 04:47:50.383"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:50.384" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:50.384" endtime="20210420 04:47:55.802"/>
</kw>
<status status="PASS" starttime="20210420 04:47:50.383" endtime="20210420 04:47:55.803"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:47:55.803" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:47:55.803" endtime="20210420 04:47:55.804"/>
</kw>
<status status="PASS" starttime="20210420 04:47:48.945" endtime="20210420 04:47:55.804"/>
</kw>
<kw name="Searching Weather">
<arg>Thailand</arg>
<kw name="Input City" library="search_page">
<arg>${country}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:47:55.805" endtime="20210420 04:47:55.816"/>
</kw>
<kw name="Scroll And Click" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:55.816" endtime="20210420 04:47:55.835"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:55.835" endtime="20210420 04:47:56.116"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:56.116" level="INFO">Clicking element 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:56.116" endtime="20210420 04:47:56.184"/>
</kw>
<status status="PASS" starttime="20210420 04:47:55.816" endtime="20210420 04:47:56.184"/>
</kw>
<kw name="Wait And Input" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<arg>${the_city}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_input} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:56.185" endtime="20210420 04:47:56.202"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:56.203" level="INFO">Typing text 'Thailand' into text field 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:56.202" endtime="20210420 04:47:56.293"/>
</kw>
<status status="PASS" starttime="20210420 04:47:56.184" endtime="20210420 04:47:56.293"/>
</kw>
<status status="PASS" starttime="20210420 04:47:55.804" endtime="20210420 04:47:56.294"/>
</kw>
<kw name="Submit Field" library="search_page">
<kw name="Scroll And Click" library="helper_func">
<arg>${SUBMIT_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:56.294" endtime="20210420 04:47:56.313"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:56.313" endtime="20210420 04:47:56.582"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:56.582" level="INFO">Clicking element 'xpath://*[@class="search"]/button'.</msg>
<status status="PASS" starttime="20210420 04:47:56.582" endtime="20210420 04:47:56.616"/>
</kw>
<status status="PASS" starttime="20210420 04:47:56.294" endtime="20210420 04:47:56.616"/>
</kw>
<status status="PASS" starttime="20210420 04:47:56.294" endtime="20210420 04:47:56.617"/>
</kw>
<kw name="Verify Results" library="search_page">
<arg>${country}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_valid}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:56.617" endtime="20210420 04:47:57.268"/>
</kw>
<msg timestamp="20210420 04:47:57.269" level="INFO">${check_valid} = True</msg>
<status status="PASS" starttime="20210420 04:47:56.617" endtime="20210420 04:47:57.269"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count_result}</var>
<arg>${DROPDOWN_MENU}/li</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20210420 04:47:57.274" level="INFO">${count_result} = 1</msg>
<status status="PASS" starttime="20210420 04:47:57.269" endtime="20210420 04:47:57.274"/>
</kw>
<if>
<branch type="IF" condition="'${check_valid}' == 'True'">
<if>
<branch type="IF" condition="${count_result} &gt; 1">
<for flavor="IN RANGE">
<var>${i}</var>
<value>1</value>
<value>${count_result}+1</value>
<iter>
<var name="${i}">${i}</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li[${i}]/span</arg>
<status status="NOT RUN" starttime="20210420 04:47:57.275" endtime="20210420 04:47:57.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210420 04:47:57.277" endtime="20210420 04:47:57.277"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:57.275" endtime="20210420 04:47:57.277"/>
</iter>
<status status="NOT RUN" starttime="20210420 04:47:57.275" endtime="20210420 04:47:57.277"/>
</for>
<status status="NOT RUN" starttime="20210420 04:47:57.275" endtime="20210420 04:47:57.277"/>
</branch>
<branch type="ELSE">
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li/span</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:57.278" endtime="20210420 04:47:57.293"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:57.307" level="INFO">${text} = Kingdom of Thailand, TH</msg>
<status status="PASS" starttime="20210420 04:47:57.293" endtime="20210420 04:47:57.307"/>
</kw>
<msg timestamp="20210420 04:47:57.308" level="INFO">${result} = Kingdom of Thailand, TH</msg>
<status status="PASS" starttime="20210420 04:47:57.277" endtime="20210420 04:47:57.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:47:57.308" endtime="20210420 04:47:57.308"/>
</kw>
<status status="PASS" starttime="20210420 04:47:57.277" endtime="20210420 04:47:57.308"/>
</branch>
<status status="PASS" starttime="20210420 04:47:57.275" endtime="20210420 04:47:57.308"/>
</if>
<status status="PASS" starttime="20210420 04:47:57.275" endtime="20210420 04:47:57.308"/>
</branch>
<branch type="ELSE">
<kw name="Verify No Result" library="search_page">
<status status="NOT RUN" starttime="20210420 04:47:57.308" endtime="20210420 04:47:57.308"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:57.308" endtime="20210420 04:47:57.308"/>
</branch>
<status status="PASS" starttime="20210420 04:47:57.275" endtime="20210420 04:47:57.308"/>
</if>
<status status="PASS" starttime="20210420 04:47:56.617" endtime="20210420 04:47:57.308"/>
</kw>
<status status="PASS" starttime="20210420 04:47:55.804" endtime="20210420 04:47:57.309"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:47:57.309" endtime="20210420 04:47:57.381"/>
</kw>
<status status="PASS" starttime="20210420 04:47:57.309" endtime="20210420 04:47:57.382"/>
</kw>
<status status="PASS" starttime="20210420 04:47:48.944" endtime="20210420 04:47:57.382"/>
</test>
<test id="s1-s1-s1-t6" name="Verify Searching Weather">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:57.385" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:47:57.384" endtime="20210420 04:47:57.385"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:57.386" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7feb62c0f2b0&gt;</msg>
<status status="PASS" starttime="20210420 04:47:57.386" endtime="20210420 04:47:57.386"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:57.386" endtime="20210420 04:47:57.386"/>
</kw>
<status status="PASS" starttime="20210420 04:47:57.386" endtime="20210420 04:47:57.386"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:57.387" endtime="20210420 04:47:57.387"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:57.387" endtime="20210420 04:47:57.388"/>
</kw>
<status status="PASS" starttime="20210420 04:47:57.387" endtime="20210420 04:47:57.388"/>
</kw>
<status status="PASS" starttime="20210420 04:47:57.387" endtime="20210420 04:47:57.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:47:57.388" endtime="20210420 04:47:57.388"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:47:57.388" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:47:57.388" endtime="20210420 04:47:58.801"/>
</kw>
<status status="PASS" starttime="20210420 04:47:57.385" endtime="20210420 04:47:58.802"/>
</kw>
<status status="PASS" starttime="20210420 04:47:57.385" endtime="20210420 04:47:58.802"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:47:58.803" endtime="20210420 04:47:58.913"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:47:58.913" endtime="20210420 04:47:58.914"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:58.915" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:58.914" endtime="20210420 04:48:05.095"/>
</kw>
<status status="PASS" starttime="20210420 04:47:58.914" endtime="20210420 04:48:05.096"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:48:05.096" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:48:05.096" endtime="20210420 04:48:05.096"/>
</kw>
<status status="PASS" starttime="20210420 04:47:57.384" endtime="20210420 04:48:05.097"/>
</kw>
<kw name="Searching Weather">
<arg>ASDCSDC</arg>
<kw name="Input City" library="search_page">
<arg>${country}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:48:05.097" endtime="20210420 04:48:05.108"/>
</kw>
<kw name="Scroll And Click" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:48:05.108" endtime="20210420 04:48:05.131"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:48:05.131" endtime="20210420 04:48:05.415"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:48:05.415" level="INFO">Clicking element 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:48:05.415" endtime="20210420 04:48:05.486"/>
</kw>
<status status="PASS" starttime="20210420 04:48:05.108" endtime="20210420 04:48:05.486"/>
</kw>
<kw name="Wait And Input" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<arg>${the_city}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_input} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:48:05.487" endtime="20210420 04:48:05.502"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210420 04:48:05.503" level="INFO">Typing text 'ASDCSDC' into text field 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:48:05.502" endtime="20210420 04:48:05.574"/>
</kw>
<status status="PASS" starttime="20210420 04:48:05.486" endtime="20210420 04:48:05.574"/>
</kw>
<status status="PASS" starttime="20210420 04:48:05.097" endtime="20210420 04:48:05.575"/>
</kw>
<kw name="Submit Field" library="search_page">
<kw name="Scroll And Click" library="helper_func">
<arg>${SUBMIT_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:48:05.576" endtime="20210420 04:48:05.602"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:48:05.603" endtime="20210420 04:48:05.883"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:48:05.883" level="INFO">Clicking element 'xpath://*[@class="search"]/button'.</msg>
<status status="PASS" starttime="20210420 04:48:05.883" endtime="20210420 04:48:05.918"/>
</kw>
<status status="PASS" starttime="20210420 04:48:05.575" endtime="20210420 04:48:05.918"/>
</kw>
<status status="PASS" starttime="20210420 04:48:05.575" endtime="20210420 04:48:05.918"/>
</kw>
<kw name="Verify Results" library="search_page">
<arg>${country}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_valid}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20210420 04:48:09.978" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="../../image/selenium-screenshot-39.png"&gt;&lt;img src="../../image/selenium-screenshot-39.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210420 04:48:09.092" endtime="20210420 04:48:09.978"/>
</kw>
<msg timestamp="20210420 04:48:09.985" level="FAIL">Element 'xpath://*[@class="search-dropdown-menu"]/li' not visible after 3 seconds.</msg>
<status status="FAIL" starttime="20210420 04:48:05.919" endtime="20210420 04:48:09.985"/>
</kw>
<msg timestamp="20210420 04:48:09.985" level="INFO">${check_valid} = False</msg>
<status status="PASS" starttime="20210420 04:48:05.919" endtime="20210420 04:48:09.985"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count_result}</var>
<arg>${DROPDOWN_MENU}/li</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20210420 04:48:09.992" level="INFO">${count_result} = 0</msg>
<status status="PASS" starttime="20210420 04:48:09.985" endtime="20210420 04:48:09.992"/>
</kw>
<if>
<branch type="IF" condition="'${check_valid}' == 'True'">
<if>
<branch type="IF" condition="${count_result} &gt; 1">
<for flavor="IN RANGE">
<var>${i}</var>
<value>1</value>
<value>${count_result}+1</value>
<iter>
<var name="${i}">${i}</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li[${i}]/span</arg>
<status status="NOT RUN" starttime="20210420 04:48:09.993" endtime="20210420 04:48:09.993"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210420 04:48:09.993" endtime="20210420 04:48:09.993"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:48:09.992" endtime="20210420 04:48:09.993"/>
</iter>
<status status="NOT RUN" starttime="20210420 04:48:09.992" endtime="20210420 04:48:09.993"/>
</for>
<status status="NOT RUN" starttime="20210420 04:48:09.992" endtime="20210420 04:48:09.993"/>
</branch>
<branch type="ELSE">
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li/span</arg>
<status status="NOT RUN" starttime="20210420 04:48:09.993" endtime="20210420 04:48:09.993"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210420 04:48:09.993" endtime="20210420 04:48:09.993"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:48:09.993" endtime="20210420 04:48:09.993"/>
</branch>
<status status="NOT RUN" starttime="20210420 04:48:09.992" endtime="20210420 04:48:09.993"/>
</if>
<status status="NOT RUN" starttime="20210420 04:48:09.992" endtime="20210420 04:48:09.993"/>
</branch>
<branch type="ELSE">
<kw name="Verify No Result" library="search_page">
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_error_msg}</var>
<arg>${ERROR_MSG_LOC}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:48:09.994" endtime="20210420 04:48:10.009"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:48:10.024" level="INFO">${text} = Not found. To make search more precise put the city's name, comma, 2-letter country code (ISO3166).</msg>
<status status="PASS" starttime="20210420 04:48:10.010" endtime="20210420 04:48:10.024"/>
</kw>
<msg timestamp="20210420 04:48:10.025" level="INFO">${actual_error_msg} = Not found. To make search more precise put the city's name, comma, 2-letter country code (ISO3166).</msg>
<status status="PASS" starttime="20210420 04:48:09.994" endtime="20210420 04:48:10.025"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actual_error_msg}</arg>
<arg>${ERROR_MSG}</arg>
<arg>${actual_error_msg} message not found</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210420 04:48:10.025" endtime="20210420 04:48:10.025"/>
</kw>
<status status="PASS" starttime="20210420 04:48:09.993" endtime="20210420 04:48:10.025"/>
</kw>
<status status="PASS" starttime="20210420 04:48:09.993" endtime="20210420 04:48:10.025"/>
</branch>
<status status="PASS" starttime="20210420 04:48:09.992" endtime="20210420 04:48:10.025"/>
</if>
<status status="PASS" starttime="20210420 04:48:05.918" endtime="20210420 04:48:10.026"/>
</kw>
<status status="PASS" starttime="20210420 04:48:05.097" endtime="20210420 04:48:10.026"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:48:10.026" endtime="20210420 04:48:10.101"/>
</kw>
<status status="PASS" starttime="20210420 04:48:10.026" endtime="20210420 04:48:10.101"/>
</kw>
<status status="PASS" starttime="20210420 04:47:57.383" endtime="20210420 04:48:10.101"/>
</test>
<doc>Test Suites for Searching weather</doc>
<status status="PASS" starttime="20210420 04:47:14.435" endtime="20210420 04:48:10.103"/>
</suite>
<status status="PASS" starttime="20210420 04:47:14.433" endtime="20210420 04:48:10.106"/>
</suite>
<suite id="s1-s2" name="SearchTheCityTest" source="/Users/macbookpro/Desktop/AutomationChallenge/tests/SearchTheCityTest">
<suite id="s1-s2-s1" name="Search Weather" source="/Users/macbookpro/Desktop/AutomationChallenge/tests/SearchTheCityTest/search_weather.robot">
<test id="s1-s2-s1-t1" name="User can search the city">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:14.830" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:47:14.830" endtime="20210420 04:47:14.830"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:14.832" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7f84cd51be80&gt;</msg>
<status status="PASS" starttime="20210420 04:47:14.832" endtime="20210420 04:47:14.832"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:14.833" endtime="20210420 04:47:14.833"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.833" endtime="20210420 04:47:14.833"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:14.834" endtime="20210420 04:47:14.834"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:14.835" endtime="20210420 04:47:14.835"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.834" endtime="20210420 04:47:14.835"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.834" endtime="20210420 04:47:14.835"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:47:14.835" endtime="20210420 04:47:14.836"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:47:14.836" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:47:14.836" endtime="20210420 04:47:16.223"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.831" endtime="20210420 04:47:16.224"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.830" endtime="20210420 04:47:16.224"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:47:16.224" endtime="20210420 04:47:16.332"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:47:16.332" endtime="20210420 04:47:16.333"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:16.334" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:16.334" endtime="20210420 04:47:21.209"/>
</kw>
<status status="PASS" starttime="20210420 04:47:16.333" endtime="20210420 04:47:21.209"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:47:21.210" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:47:21.209" endtime="20210420 04:47:21.210"/>
</kw>
<status status="PASS" starttime="20210420 04:47:14.829" endtime="20210420 04:47:21.210"/>
</kw>
<kw name="Given user goes to homepage" library="search_step">
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:21.212" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:21.212" endtime="20210420 04:47:22.049"/>
</kw>
<status status="PASS" starttime="20210420 04:47:21.211" endtime="20210420 04:47:22.050"/>
</kw>
<status status="PASS" starttime="20210420 04:47:21.211" endtime="20210420 04:47:22.050"/>
</kw>
<kw name="And he inputs city in the text field" library="search_step">
<arg>Thanh pho Ho Chi Minh</arg>
<kw name="Input City" library="search_page">
<arg>${city}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:47:22.051" endtime="20210420 04:47:22.789"/>
</kw>
<kw name="Scroll And Click" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:22.790" endtime="20210420 04:47:22.823"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:22.823" endtime="20210420 04:47:23.098"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:23.099" level="INFO">Clicking element 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:23.098" endtime="20210420 04:47:23.157"/>
</kw>
<status status="PASS" starttime="20210420 04:47:22.790" endtime="20210420 04:47:23.157"/>
</kw>
<kw name="Wait And Input" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<arg>${the_city}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_input} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:23.158" endtime="20210420 04:47:23.185"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:23.186" level="INFO">Typing text 'Thanh pho Ho Chi Minh' into text field 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:23.186" endtime="20210420 04:47:23.285"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.158" endtime="20210420 04:47:23.285"/>
</kw>
<status status="PASS" starttime="20210420 04:47:22.051" endtime="20210420 04:47:23.285"/>
</kw>
<status status="PASS" starttime="20210420 04:47:22.050" endtime="20210420 04:47:23.285"/>
</kw>
<kw name="When he clicks on Submit button" library="search_step">
<kw name="Submit Field" library="search_page">
<kw name="Scroll And Click" library="helper_func">
<arg>${SUBMIT_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:23.287" endtime="20210420 04:47:23.302"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:23.302" endtime="20210420 04:47:23.581"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:23.581" level="INFO">Clicking element 'xpath://*[@class="search"]/button'.</msg>
<status status="PASS" starttime="20210420 04:47:23.581" endtime="20210420 04:47:23.615"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.286" endtime="20210420 04:47:23.615"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.286" endtime="20210420 04:47:23.615"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.286" endtime="20210420 04:47:23.615"/>
</kw>
<kw name="Then verify that the city is displayed correctly" library="search_step">
<arg>Ho Chi Minh</arg>
<kw name="Verify Results" library="search_page">
<arg>${the_city}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_valid}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:23.616" endtime="20210420 04:47:24.260"/>
</kw>
<msg timestamp="20210420 04:47:24.260" level="INFO">${check_valid} = True</msg>
<status status="PASS" starttime="20210420 04:47:23.616" endtime="20210420 04:47:24.260"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count_result}</var>
<arg>${DROPDOWN_MENU}/li</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20210420 04:47:24.267" level="INFO">${count_result} = 1</msg>
<status status="PASS" starttime="20210420 04:47:24.261" endtime="20210420 04:47:24.267"/>
</kw>
<if>
<branch type="IF" condition="'${check_valid}' == 'True'">
<if>
<branch type="IF" condition="${count_result} &gt; 1">
<for flavor="IN RANGE">
<var>${i}</var>
<value>1</value>
<value>${count_result}+1</value>
<iter>
<var name="${i}">${i}</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li[${i}]/span</arg>
<status status="NOT RUN" starttime="20210420 04:47:24.268" endtime="20210420 04:47:24.268"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210420 04:47:24.268" endtime="20210420 04:47:24.268"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:24.268" endtime="20210420 04:47:24.268"/>
</iter>
<status status="NOT RUN" starttime="20210420 04:47:24.268" endtime="20210420 04:47:24.269"/>
</for>
<status status="NOT RUN" starttime="20210420 04:47:24.268" endtime="20210420 04:47:24.269"/>
</branch>
<branch type="ELSE">
<kw name="Wait And Get Text" library="helper_func">
<var>${result}</var>
<arg>${DROPDOWN_MENU}/li/span</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:24.269" endtime="20210420 04:47:24.284"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:24.299" level="INFO">${text} = Thanh pho Ho Chi Minh, VN</msg>
<status status="PASS" starttime="20210420 04:47:24.285" endtime="20210420 04:47:24.299"/>
</kw>
<msg timestamp="20210420 04:47:24.299" level="INFO">${result} = Thanh pho Ho Chi Minh, VN</msg>
<status status="PASS" starttime="20210420 04:47:24.269" endtime="20210420 04:47:24.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${the_city}</arg>
<arg>${the_city} not found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:47:24.300" endtime="20210420 04:47:24.300"/>
</kw>
<status status="PASS" starttime="20210420 04:47:24.269" endtime="20210420 04:47:24.300"/>
</branch>
<status status="PASS" starttime="20210420 04:47:24.267" endtime="20210420 04:47:24.300"/>
</if>
<status status="PASS" starttime="20210420 04:47:24.267" endtime="20210420 04:47:24.300"/>
</branch>
<branch type="ELSE">
<kw name="Verify No Result" library="search_page">
<status status="NOT RUN" starttime="20210420 04:47:24.300" endtime="20210420 04:47:24.301"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:24.300" endtime="20210420 04:47:24.301"/>
</branch>
<status status="PASS" starttime="20210420 04:47:24.267" endtime="20210420 04:47:24.301"/>
</if>
<status status="PASS" starttime="20210420 04:47:23.616" endtime="20210420 04:47:24.301"/>
</kw>
<status status="PASS" starttime="20210420 04:47:23.615" endtime="20210420 04:47:24.301"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:47:24.302" endtime="20210420 04:47:24.383"/>
</kw>
<status status="PASS" starttime="20210420 04:47:24.301" endtime="20210420 04:47:24.384"/>
</kw>
<tag>TC-can_search_city</tag>
<status status="PASS" starttime="20210420 04:47:14.828" endtime="20210420 04:47:24.384"/>
</test>
<test id="s1-s2-s1-t2" name="User can select the options city">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:24.387" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:47:24.387" endtime="20210420 04:47:24.387"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:24.389" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7f84cd500760&gt;</msg>
<status status="PASS" starttime="20210420 04:47:24.388" endtime="20210420 04:47:24.389"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:24.389" endtime="20210420 04:47:24.390"/>
</kw>
<status status="PASS" starttime="20210420 04:47:24.389" endtime="20210420 04:47:24.390"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:24.390" endtime="20210420 04:47:24.391"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:24.391" endtime="20210420 04:47:24.391"/>
</kw>
<status status="PASS" starttime="20210420 04:47:24.390" endtime="20210420 04:47:24.391"/>
</kw>
<status status="PASS" starttime="20210420 04:47:24.390" endtime="20210420 04:47:24.391"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:47:24.391" endtime="20210420 04:47:24.392"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:47:24.392" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:47:24.392" endtime="20210420 04:47:25.670"/>
</kw>
<status status="PASS" starttime="20210420 04:47:24.388" endtime="20210420 04:47:25.670"/>
</kw>
<status status="PASS" starttime="20210420 04:47:24.387" endtime="20210420 04:47:25.670"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:47:25.671" endtime="20210420 04:47:25.778"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:47:25.778" endtime="20210420 04:47:25.779"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:25.780" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:25.780" endtime="20210420 04:47:31.002"/>
</kw>
<status status="PASS" starttime="20210420 04:47:25.779" endtime="20210420 04:47:31.003"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:47:31.004" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:47:31.003" endtime="20210420 04:47:31.004"/>
</kw>
<status status="PASS" starttime="20210420 04:47:24.386" endtime="20210420 04:47:31.004"/>
</kw>
<kw name="Given user goes to homepage" library="search_step">
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:31.006" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:31.005" endtime="20210420 04:47:31.915"/>
</kw>
<status status="PASS" starttime="20210420 04:47:31.005" endtime="20210420 04:47:31.915"/>
</kw>
<status status="PASS" starttime="20210420 04:47:31.005" endtime="20210420 04:47:31.915"/>
</kw>
<kw name="And he inputs city in the text field" library="search_step">
<arg>Ho Chi Minh</arg>
<kw name="Input City" library="search_page">
<arg>${city}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:47:31.918" endtime="20210420 04:47:32.634"/>
</kw>
<kw name="Scroll And Click" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:32.635" endtime="20210420 04:47:32.663"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:32.664" endtime="20210420 04:47:32.930"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:32.930" level="INFO">Clicking element 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:32.930" endtime="20210420 04:47:32.997"/>
</kw>
<status status="PASS" starttime="20210420 04:47:32.634" endtime="20210420 04:47:32.997"/>
</kw>
<kw name="Wait And Input" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<arg>${the_city}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_input} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:32.998" endtime="20210420 04:47:33.015"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:33.016" level="INFO">Typing text 'Ho Chi Minh' into text field 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:33.016" endtime="20210420 04:47:33.100"/>
</kw>
<status status="PASS" starttime="20210420 04:47:32.997" endtime="20210420 04:47:33.100"/>
</kw>
<status status="PASS" starttime="20210420 04:47:31.917" endtime="20210420 04:47:33.100"/>
</kw>
<status status="PASS" starttime="20210420 04:47:31.916" endtime="20210420 04:47:33.101"/>
</kw>
<kw name="When he clicks on Submit button" library="search_step">
<kw name="Submit Field" library="search_page">
<kw name="Scroll And Click" library="helper_func">
<arg>${SUBMIT_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:33.102" endtime="20210420 04:47:33.117"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:33.117" endtime="20210420 04:47:33.398"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:33.399" level="INFO">Clicking element 'xpath://*[@class="search"]/button'.</msg>
<status status="PASS" starttime="20210420 04:47:33.398" endtime="20210420 04:47:33.436"/>
</kw>
<status status="PASS" starttime="20210420 04:47:33.102" endtime="20210420 04:47:33.436"/>
</kw>
<status status="PASS" starttime="20210420 04:47:33.101" endtime="20210420 04:47:33.436"/>
</kw>
<status status="PASS" starttime="20210420 04:47:33.101" endtime="20210420 04:47:33.437"/>
</kw>
<kw name="And he selects the options city" library="search_step">
<kw name="Get Infos City" library="search_page">
<var>${city_infos}</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${city_name}</var>
<arg>${DROPDOWN_MENU}/li[1]/span[1]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:33.438" endtime="20210420 04:47:34.089"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:34.105" level="INFO">${text} = Thanh pho Ho Chi Minh, VN</msg>
<status status="PASS" starttime="20210420 04:47:34.090" endtime="20210420 04:47:34.105"/>
</kw>
<msg timestamp="20210420 04:47:34.105" level="INFO">${city_name} = Thanh pho Ho Chi Minh, VN</msg>
<status status="PASS" starttime="20210420 04:47:33.438" endtime="20210420 04:47:34.105"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${temperature}</var>
<arg>${DROPDOWN_MENU}/li[1]/span[2]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:34.106" endtime="20210420 04:47:34.122"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:34.136" level="INFO">${text} = 27°C</msg>
<status status="PASS" starttime="20210420 04:47:34.122" endtime="20210420 04:47:34.136"/>
</kw>
<msg timestamp="20210420 04:47:34.136" level="INFO">${temperature} = 27°C</msg>
<status status="PASS" starttime="20210420 04:47:34.105" endtime="20210420 04:47:34.136"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${lat_lng}</var>
<arg>${DROPDOWN_MENU}/li[1]/span[4]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:34.137" endtime="20210420 04:47:34.152"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:34.166" level="INFO">${text} = 10.750, 106.667</msg>
<status status="PASS" starttime="20210420 04:47:34.152" endtime="20210420 04:47:34.166"/>
</kw>
<msg timestamp="20210420 04:47:34.167" level="INFO">${lat_lng} = 10.750, 106.667</msg>
<status status="PASS" starttime="20210420 04:47:34.136" endtime="20210420 04:47:34.167"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${city_infos}</var>
<arg>${city_name}</arg>
<arg>${temperature}</arg>
<arg>${lat_lng}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210420 04:47:34.167" level="INFO">${city_infos} = ['Thanh pho Ho Chi Minh, VN', '27°C', '10.750, 106.667']</msg>
<status status="PASS" starttime="20210420 04:47:34.167" endtime="20210420 04:47:34.167"/>
</kw>
<msg timestamp="20210420 04:47:34.167" level="INFO">${city_infos} = ['Thanh pho Ho Chi Minh, VN', '27°C', '10.750, 106.667']</msg>
<status status="PASS" starttime="20210420 04:47:33.438" endtime="20210420 04:47:34.167"/>
</kw>
<kw name="Select Option City" library="search_page">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_valid}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:34.168" endtime="20210420 04:47:34.189"/>
</kw>
<msg timestamp="20210420 04:47:34.189" level="INFO">${check_valid} = True</msg>
<status status="PASS" starttime="20210420 04:47:34.168" endtime="20210420 04:47:34.189"/>
</kw>
<if>
<branch type="IF" condition="'${check_valid}' == 'True'">
<kw name="Scroll And Click" library="helper_func">
<arg>${DROPDOWN_MENU}/li[1]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:34.190" endtime="20210420 04:47:34.205"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:34.205" endtime="20210420 04:47:34.483"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:34.484" level="INFO">Clicking element 'xpath://*[@class="search-dropdown-menu"]/li[1]'.</msg>
<status status="PASS" starttime="20210420 04:47:34.483" endtime="20210420 04:47:34.530"/>
</kw>
<status status="PASS" starttime="20210420 04:47:34.190" endtime="20210420 04:47:34.531"/>
</kw>
<status status="PASS" starttime="20210420 04:47:34.190" endtime="20210420 04:47:34.531"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>"There is no option to select"</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20210420 04:47:34.531" endtime="20210420 04:47:34.531"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:34.531" endtime="20210420 04:47:34.532"/>
</branch>
<status status="PASS" starttime="20210420 04:47:34.189" endtime="20210420 04:47:34.532"/>
</if>
<status status="PASS" starttime="20210420 04:47:34.168" endtime="20210420 04:47:34.532"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${city_infos}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210420 04:47:34.533" level="INFO">${city_infos} = ['Thanh pho Ho Chi Minh, VN', '27°C', '10.750, 106.667']</msg>
<status status="PASS" starttime="20210420 04:47:34.532" endtime="20210420 04:47:34.533"/>
</kw>
<status status="PASS" starttime="20210420 04:47:33.437" endtime="20210420 04:47:34.533"/>
</kw>
<kw name="Then verify that the city is displayed correctly in section content" library="search_step">
<arg>Ho Chi Minh</arg>
<kw name="Verify Section Content" library="search_page">
<arg>${city_infos}</arg>
<arg>${city}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:47:34.535" endtime="20210420 04:47:36.082"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_city_name}</var>
<arg>${CITY_NAME_CONTENT}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:36.083" endtime="20210420 04:47:36.098"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:36.112" level="INFO">${text} = Ho Chi Minh City, VN</msg>
<status status="PASS" starttime="20210420 04:47:36.098" endtime="20210420 04:47:36.112"/>
</kw>
<msg timestamp="20210420 04:47:36.113" level="INFO">${actual_city_name} = Ho Chi Minh City, VN</msg>
<status status="PASS" starttime="20210420 04:47:36.082" endtime="20210420 04:47:36.113"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${actual_city_name}</var>
<arg>${actual_city_name}</arg>
<arg>${city}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210420 04:47:36.114" level="INFO">${actual_city_name} = ['Ho Chi Minh']</msg>
<status status="PASS" starttime="20210420 04:47:36.113" endtime="20210420 04:47:36.114"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${expected_selected_city}</var>
<arg>${selected_city}[0]</arg>
<arg>${city}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210420 04:47:36.115" level="INFO">${expected_selected_city} = ['Ho Chi Minh']</msg>
<status status="PASS" starttime="20210420 04:47:36.115" endtime="20210420 04:47:36.115"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_city_temperature}</var>
<arg>${CITY_TEMPERATURE_CONTENT}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:36.116" endtime="20210420 04:47:36.131"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:36.145" level="INFO">${text} = 26°C</msg>
<status status="PASS" starttime="20210420 04:47:36.131" endtime="20210420 04:47:36.145"/>
</kw>
<msg timestamp="20210420 04:47:36.145" level="INFO">${actual_city_temperature} = 26°C</msg>
<status status="PASS" starttime="20210420 04:47:36.115" endtime="20210420 04:47:36.145"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actual_city_name[0]}</arg>
<arg>${expected_selected_city[0]}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210420 04:47:36.146" endtime="20210420 04:47:36.148"/>
</kw>
<status status="PASS" starttime="20210420 04:47:34.534" endtime="20210420 04:47:36.148"/>
</kw>
<status status="PASS" starttime="20210420 04:47:34.533" endtime="20210420 04:47:36.148"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:47:36.149" endtime="20210420 04:47:36.222"/>
</kw>
<status status="PASS" starttime="20210420 04:47:36.148" endtime="20210420 04:47:36.223"/>
</kw>
<tag>TC-can_select_options_city</tag>
<status status="PASS" starttime="20210420 04:47:24.386" endtime="20210420 04:47:36.224"/>
</test>
<test id="s1-s2-s1-t3" name="User can change temperature from metric to imperial">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:36.227" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:47:36.227" endtime="20210420 04:47:36.227"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:36.231" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7f84cd52c4f0&gt;</msg>
<status status="PASS" starttime="20210420 04:47:36.230" endtime="20210420 04:47:36.231"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:36.231" endtime="20210420 04:47:36.232"/>
</kw>
<status status="PASS" starttime="20210420 04:47:36.231" endtime="20210420 04:47:36.232"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:36.232" endtime="20210420 04:47:36.233"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:36.233" endtime="20210420 04:47:36.233"/>
</kw>
<status status="PASS" starttime="20210420 04:47:36.232" endtime="20210420 04:47:36.234"/>
</kw>
<status status="PASS" starttime="20210420 04:47:36.232" endtime="20210420 04:47:36.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:47:36.234" endtime="20210420 04:47:36.235"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:47:36.236" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:47:36.235" endtime="20210420 04:47:37.560"/>
</kw>
<status status="PASS" starttime="20210420 04:47:36.229" endtime="20210420 04:47:37.561"/>
</kw>
<status status="PASS" starttime="20210420 04:47:36.229" endtime="20210420 04:47:37.561"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:47:37.562" endtime="20210420 04:47:37.668"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:47:37.669" endtime="20210420 04:47:37.669"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:37.671" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:37.670" endtime="20210420 04:47:42.629"/>
</kw>
<status status="PASS" starttime="20210420 04:47:37.670" endtime="20210420 04:47:42.629"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:47:42.630" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:47:42.629" endtime="20210420 04:47:42.630"/>
</kw>
<status status="PASS" starttime="20210420 04:47:36.226" endtime="20210420 04:47:42.630"/>
</kw>
<kw name="Given user goes to homepage" library="search_step">
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:42.632" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:42.632" endtime="20210420 04:47:43.444"/>
</kw>
<status status="PASS" starttime="20210420 04:47:42.631" endtime="20210420 04:47:43.444"/>
</kw>
<status status="PASS" starttime="20210420 04:47:42.630" endtime="20210420 04:47:43.444"/>
</kw>
<kw name="When he clicks on Imperial button" library="search_step">
<kw name="Wait And Click" library="helper_func">
<arg>${IMPERIAL_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_click}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_click} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:43.446" endtime="20210420 04:47:43.468"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_click}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:43.469" level="INFO">Clicking element 'xpath://*[@class="widget-switch switch-blue"]//*[@for="imperial"]'.</msg>
<status status="PASS" starttime="20210420 04:47:43.469" endtime="20210420 04:47:44.334"/>
</kw>
<status status="PASS" starttime="20210420 04:47:43.445" endtime="20210420 04:47:44.335"/>
</kw>
<status status="PASS" starttime="20210420 04:47:43.445" endtime="20210420 04:47:44.335"/>
</kw>
<kw name="Then verify that the temperature is changed from metric to imperial" library="search_step">
<kw name="Verify Imperial" library="search_page">
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:47:44.336" endtime="20210420 04:47:45.740"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_city_temperature}</var>
<arg>${CITY_TEMPERATURE_CONTENT}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:45.741" endtime="20210420 04:47:45.761"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:45.776" level="INFO">${text} = 49°F</msg>
<status status="PASS" starttime="20210420 04:47:45.761" endtime="20210420 04:47:45.776"/>
</kw>
<msg timestamp="20210420 04:47:45.776" level="INFO">${actual_city_temperature} = 49°F</msg>
<status status="PASS" starttime="20210420 04:47:45.740" endtime="20210420 04:47:45.776"/>
</kw>
<kw name="Get Substring" library="String">
<var>${actual_city_temperature}</var>
<arg>${actual_city_temperature}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210420 04:47:45.777" level="INFO">${actual_city_temperature} = F</msg>
<status status="PASS" starttime="20210420 04:47:45.777" endtime="20210420 04:47:45.777"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actual_city_temperature}</arg>
<arg>F</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210420 04:47:45.778" endtime="20210420 04:47:45.779"/>
</kw>
<status status="PASS" starttime="20210420 04:47:44.336" endtime="20210420 04:47:45.780"/>
</kw>
<status status="PASS" starttime="20210420 04:47:44.335" endtime="20210420 04:47:45.780"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:47:45.781" endtime="20210420 04:47:45.854"/>
</kw>
<status status="PASS" starttime="20210420 04:47:45.781" endtime="20210420 04:47:45.855"/>
</kw>
<tag>TC-can_change from_metric_to_imperial</tag>
<status status="PASS" starttime="20210420 04:47:36.225" endtime="20210420 04:47:45.855"/>
</test>
<test id="s1-s2-s1-t4" name="Verify that information weather is displayed same as respsonse data">
<kw name="Begin Web Test" library="Common" type="SETUP">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:45.857" level="INFO">${system} = Darwin</msg>
<status status="PASS" starttime="20210420 04:47:45.856" endtime="20210420 04:47:45.857"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BROWSER}'=='Chrome'</arg>
<arg>Open Chrome Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<arg>ELSE IF</arg>
<arg>'${BROWSER}'=='Firefox'</arg>
<arg>Open Firefox Browser</arg>
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Open Chrome Browser" library="Common">
<arg>${system}</arg>
<arg>${HEADLESS}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:45.858" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x7f84cd5a94f0&gt;</msg>
<status status="PASS" starttime="20210420 04:47:45.858" endtime="20210420 04:47:45.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${has_headless}'=='True'</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--headless</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:45.859" endtime="20210420 04:47:45.859"/>
</kw>
<status status="PASS" starttime="20210420 04:47:45.858" endtime="20210420 04:47:45.859"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='Darwin'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:45.860" endtime="20210420 04:47:45.860"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20210420 04:47:45.860" endtime="20210420 04:47:45.860"/>
</kw>
<status status="PASS" starttime="20210420 04:47:45.859" endtime="20210420 04:47:45.860"/>
</kw>
<status status="PASS" starttime="20210420 04:47:45.859" endtime="20210420 04:47:45.861"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${os_system}'=='linux'</arg>
<arg>Run Keywords</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--no-sandbox</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-extensions</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--disable-dev-shm-usage</arg>
<arg>AND</arg>
<arg>Call Method</arg>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210420 04:47:45.861" endtime="20210420 04:47:45.861"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>Chrome</arg>
<arg>chrome_options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20210420 04:47:45.862" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20210420 04:47:45.861" endtime="20210420 04:47:47.275"/>
</kw>
<status status="PASS" starttime="20210420 04:47:45.857" endtime="20210420 04:47:47.276"/>
</kw>
<status status="PASS" starttime="20210420 04:47:45.857" endtime="20210420 04:47:47.276"/>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<arg>1920</arg>
<arg>1080</arg>
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<status status="PASS" starttime="20210420 04:47:47.277" endtime="20210420 04:47:47.383"/>
</kw>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>./results/image</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20210420 04:47:47.384" endtime="20210420 04:47:47.384"/>
</kw>
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:47.386" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:47.385" endtime="20210420 04:47:52.635"/>
</kw>
<status status="PASS" starttime="20210420 04:47:47.384" endtime="20210420 04:47:52.636"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:47:52.636" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:47:52.636" endtime="20210420 04:47:52.637"/>
</kw>
<status status="PASS" starttime="20210420 04:47:45.856" endtime="20210420 04:47:52.637"/>
</kw>
<kw name="Given user goes to homepage" library="search_step">
<kw name="Go To Home Page" library="Common">
<kw name="Go To" library="SeleniumLibrary">
<arg>${AUT_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210420 04:47:52.638" level="INFO">Opening url 'https://openweathermap.org'</msg>
<status status="PASS" starttime="20210420 04:47:52.638" endtime="20210420 04:47:53.607"/>
</kw>
<status status="PASS" starttime="20210420 04:47:52.638" endtime="20210420 04:47:53.608"/>
</kw>
<status status="PASS" starttime="20210420 04:47:52.637" endtime="20210420 04:47:53.608"/>
</kw>
<kw name="And he inputs city in the text field" library="search_step">
<arg>Ho Chi Minh</arg>
<kw name="Input City" library="search_page">
<arg>${city}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:47:53.609" endtime="20210420 04:47:54.323"/>
</kw>
<kw name="Scroll And Click" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:54.324" endtime="20210420 04:47:54.343"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:54.344" endtime="20210420 04:47:54.615"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:54.616" level="INFO">Clicking element 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:54.616" endtime="20210420 04:47:54.687"/>
</kw>
<status status="PASS" starttime="20210420 04:47:54.323" endtime="20210420 04:47:54.687"/>
</kw>
<kw name="Wait And Input" library="helper_func">
<arg>${SEARCH_FIELD}</arg>
<arg>${the_city}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_input} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:54.689" endtime="20210420 04:47:54.717"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${element_input}</arg>
<arg>${text}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:54.718" level="INFO">Typing text 'Ho Chi Minh' into text field 'xpath://*[@class="search"]//input'.</msg>
<status status="PASS" starttime="20210420 04:47:54.718" endtime="20210420 04:47:54.824"/>
</kw>
<status status="PASS" starttime="20210420 04:47:54.688" endtime="20210420 04:47:54.824"/>
</kw>
<status status="PASS" starttime="20210420 04:47:53.608" endtime="20210420 04:47:54.824"/>
</kw>
<status status="PASS" starttime="20210420 04:47:53.608" endtime="20210420 04:47:54.824"/>
</kw>
<kw name="When he clicks on Submit button" library="search_step">
<kw name="Submit Field" library="search_page">
<kw name="Scroll And Click" library="helper_func">
<arg>${SUBMIT_BTN}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:54.826" endtime="20210420 04:47:54.847"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:54.847" endtime="20210420 04:47:55.115"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:55.116" level="INFO">Clicking element 'xpath://*[@class="search"]/button'.</msg>
<status status="PASS" starttime="20210420 04:47:55.116" endtime="20210420 04:47:55.152"/>
</kw>
<status status="PASS" starttime="20210420 04:47:54.825" endtime="20210420 04:47:55.152"/>
</kw>
<status status="PASS" starttime="20210420 04:47:54.825" endtime="20210420 04:47:55.153"/>
</kw>
<status status="PASS" starttime="20210420 04:47:54.824" endtime="20210420 04:47:55.153"/>
</kw>
<kw name="And he selects the first city" library="search_step">
<arg>Ho Chi Minh</arg>
<kw name="Get info_city_weather" library="get_api">
<var>${weather_city_data}</var>
<arg>${city}</arg>
<kw name="Get city_id" library="get_api">
<var>${city_id}</var>
<arg>${city}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:47:55.155" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:47:55.155" endtime="20210420 04:47:55.155"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${city}</var>
<arg>${city}</arg>
<arg>UTF-8</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20210420 04:47:55.156" level="INFO">${city} = Ho Chi Minh</msg>
<status status="PASS" starttime="20210420 04:47:55.155" endtime="20210420 04:47:55.156"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${res}</var>
<arg>test-session</arg>
<arg>/data/2.5/find?q=${city}&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric</arg>
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<msg timestamp="20210420 04:47:56.251" level="INFO">GET Request : url=https://openweathermap.org/data/2.5/find?q=Ho%20Chi%20Minh&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric 
 path_url=/data/2.5/find?q=Ho%20Chi%20Minh&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210420 04:47:56.251" level="INFO">GET Response : url=https://openweathermap.org/data/2.5/find?q=Ho%20Chi%20Minh&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric 
 status=200, reason=OK 
 body={"message":"accurate","cod":"200","count":2,"list":[{"id":1566083,"name":"Thanh pho Ho Chi Minh","coord":{"lat":10.75,"lon":106.6667},"main":{"temp":300.15,"feels_like":303.78,"temp_min":300.15,"temp_max":300.15,"pressure":1009,"humidity":89},"dt":1618866580,"wind":{"speed":0.51,"deg":0},"sys":{"country":"VN"},"rain":null,"snow":null,"clouds":{"all":40},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]},{"id":1580578,"name":"Thành phố Hồ Chí Minh","coord":{"lat":10.8333,"lon":106.6667},"main":{"temp":300.15,"feels_like":303.78,"temp_min":300.15,"temp_max":300.15,"pressure":1009,"humidity":89},"dt":1618866346,"wind":{"speed":0.51,"deg":0},"sys":{"country":"VN"},"rain":null,"snow":null,"clouds":{"all":40},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]}]} 
 </msg>
<msg timestamp="20210420 04:47:56.251" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210420 04:47:55.156" endtime="20210420 04:47:56.251"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${res_data}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:56.253" level="INFO">${res_data} = {'message': 'accurate', 'cod': '200', 'count': 2, 'list': [{'id': 1566083, 'name': 'Thanh pho Ho Chi Minh', 'coord': {'lat': 10.75, 'lon': 106.6667}, 'main': {'temp': 300.15, 'feels_like': 303.78, 'te...</msg>
<status status="PASS" starttime="20210420 04:47:56.251" endtime="20210420 04:47:56.253"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${list_city}</var>
<arg>${res_data['list']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:56.254" level="INFO">${list_city} = [{'id': 1566083, 'name': 'Thanh pho Ho Chi Minh', 'coord': {'lat': 10.75, 'lon': 106.6667}, 'main': {'temp': 300.15, 'feels_like': 303.78, 'temp_min': 300.15, 'temp_max': 300.15, 'pressure': 1009, 'hu...</msg>
<status status="PASS" starttime="20210420 04:47:56.253" endtime="20210420 04:47:56.254"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${city_id}</var>
<arg>${list_city}[0]</arg>
<arg>id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20210420 04:47:56.256" level="INFO">${city_id} = 1566083</msg>
<status status="PASS" starttime="20210420 04:47:56.254" endtime="20210420 04:47:56.257"/>
</kw>
<msg timestamp="20210420 04:47:56.257" level="INFO">${city_id} = 1566083</msg>
<status status="PASS" starttime="20210420 04:47:55.154" endtime="20210420 04:47:56.257"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${res}</var>
<arg>test-session</arg>
<arg>/data/2.5/weather?id=${city_id}&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02</arg>
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<msg timestamp="20210420 04:47:56.843" level="INFO">GET Request : url=https://openweathermap.org/data/2.5/weather?id=1566083&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02 
 path_url=/data/2.5/weather?id=1566083&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210420 04:47:56.843" level="INFO">GET Response : url=https://openweathermap.org/data/2.5/weather?id=1566083&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02 
 status=200, reason=OK 
 body={"coord":{"lon":106.6667,"lat":10.75},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}],"base":"stations","main":{"temp":26,"feels_like":26,"temp_min":26,"temp_max":26,"pressure":1009,"humidity":94},"visibility":10000,"wind":{"speed":0.51,"deg":310},"clouds":{"all":40},"dt":1618868411,"sys":{"type":1,"id":9314,"country":"VN","sunrise":1618871987,"sunset":1618916663},"timezone":25200,"id":1566083,"name":"Ho Chi Minh City","cod":200} 
 </msg>
<msg timestamp="20210420 04:47:56.843" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210420 04:47:56.257" endtime="20210420 04:47:56.843"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${body_data}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:56.845" level="INFO">${body_data} = {'coord': {'lon': 106.6667, 'lat': 10.75}, 'weather': [{'id': 802, 'main': 'Clouds', 'description': 'scattered clouds', 'icon': '03n'}], 'base': 'stations', 'main': {'temp': 26, 'feels_like': 26, 'tem...</msg>
<status status="PASS" starttime="20210420 04:47:56.844" endtime="20210420 04:47:56.845"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${city_name}</var>
<arg>${body_data}[name]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:56.846" level="INFO">${city_name} = Ho Chi Minh City</msg>
<status status="PASS" starttime="20210420 04:47:56.845" endtime="20210420 04:47:56.846"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${country}</var>
<arg>${body_data}[sys][country]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:56.846" level="INFO">${country} = VN</msg>
<status status="PASS" starttime="20210420 04:47:56.846" endtime="20210420 04:47:56.846"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${weather_city_data}</var>
<arg>${city_name}</arg>
<arg>${country}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210420 04:47:56.847" level="INFO">${weather_city_data} = ['Ho Chi Minh City', 'VN']</msg>
<status status="PASS" starttime="20210420 04:47:56.847" endtime="20210420 04:47:56.847"/>
</kw>
<msg timestamp="20210420 04:47:56.847" level="INFO">${weather_city_data} = ['Ho Chi Minh City', 'VN']</msg>
<status status="PASS" starttime="20210420 04:47:55.154" endtime="20210420 04:47:56.847"/>
</kw>
<kw name="Get current_weather" library="get_api">
<var>${weather_infos_data}</var>
<arg>${city}</arg>
<kw name="Get lat_lng" library="get_api">
<var>${coord}</var>
<arg>${city}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>test-session</arg>
<arg>${API_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20210420 04:47:56.849" level="INFO">Creating Session using : alias=test-session, url=https://openweathermap.org, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20210420 04:47:56.849" endtime="20210420 04:47:56.849"/>
</kw>
<kw name="Encode String To Bytes" library="String">
<var>${city}</var>
<arg>${city}</arg>
<arg>UTF-8</arg>
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<msg timestamp="20210420 04:47:56.850" level="INFO">${city} = Ho Chi Minh</msg>
<status status="PASS" starttime="20210420 04:47:56.849" endtime="20210420 04:47:56.850"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${res}</var>
<arg>test-session</arg>
<arg>/data/2.5/find?q=${city}&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric</arg>
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<msg timestamp="20210420 04:47:58.049" level="INFO">GET Request : url=https://openweathermap.org/data/2.5/find?q=Ho%20Chi%20Minh&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric 
 path_url=/data/2.5/find?q=Ho%20Chi%20Minh&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210420 04:47:58.049" level="INFO">GET Response : url=https://openweathermap.org/data/2.5/find?q=Ho%20Chi%20Minh&amp;appid=439d4b804bc8187953eb36d2a8c26a02&amp;units=metric 
 status=200, reason=OK 
 body={"message":"accurate","cod":"200","count":2,"list":[{"id":1566083,"name":"Thanh pho Ho Chi Minh","coord":{"lat":10.75,"lon":106.6667},"main":{"temp":300.15,"feels_like":303.78,"temp_min":300.15,"temp_max":300.15,"pressure":1009,"humidity":89},"dt":1618866580,"wind":{"speed":0.51,"deg":0},"sys":{"country":"VN"},"rain":null,"snow":null,"clouds":{"all":40},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]},{"id":1580578,"name":"Thành phố Hồ Chí Minh","coord":{"lat":10.8333,"lon":106.6667},"main":{"temp":300.15,"feels_like":303.78,"temp_min":300.15,"temp_max":300.15,"pressure":1009,"humidity":89},"dt":1618866346,"wind":{"speed":0.51,"deg":0},"sys":{"country":"VN"},"rain":null,"snow":null,"clouds":{"all":40},"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]}]} 
 </msg>
<msg timestamp="20210420 04:47:58.049" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210420 04:47:56.850" endtime="20210420 04:47:58.049"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${res_data}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.051" level="INFO">${res_data} = {'message': 'accurate', 'cod': '200', 'count': 2, 'list': [{'id': 1566083, 'name': 'Thanh pho Ho Chi Minh', 'coord': {'lat': 10.75, 'lon': 106.6667}, 'main': {'temp': 300.15, 'feels_like': 303.78, 'te...</msg>
<status status="PASS" starttime="20210420 04:47:58.050" endtime="20210420 04:47:58.051"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${list_city}</var>
<arg>${res_data['list']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.052" level="INFO">${list_city} = [{'id': 1566083, 'name': 'Thanh pho Ho Chi Minh', 'coord': {'lat': 10.75, 'lon': 106.6667}, 'main': {'temp': 300.15, 'feels_like': 303.78, 'temp_min': 300.15, 'temp_max': 300.15, 'pressure': 1009, 'hu...</msg>
<status status="PASS" starttime="20210420 04:47:58.051" endtime="20210420 04:47:58.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${lat}</var>
<arg>${list_city}[0][coord][lat]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.053" level="INFO">${lat} = 10.75</msg>
<status status="PASS" starttime="20210420 04:47:58.053" endtime="20210420 04:47:58.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${lng}</var>
<arg>${list_city}[0][coord][lon]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.054" level="INFO">${lng} = 106.6667</msg>
<status status="PASS" starttime="20210420 04:47:58.054" endtime="20210420 04:47:58.054"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${coord}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210420 04:47:58.054" level="INFO">${coord} = []</msg>
<status status="PASS" starttime="20210420 04:47:58.054" endtime="20210420 04:47:58.054"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${coord}</arg>
<arg>${lat}</arg>
<arg>${lng}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210420 04:47:58.055" endtime="20210420 04:47:58.055"/>
</kw>
<msg timestamp="20210420 04:47:58.055" level="INFO">${coord} = [10.75, 106.6667]</msg>
<status status="PASS" starttime="20210420 04:47:56.848" endtime="20210420 04:47:58.056"/>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<var>${res}</var>
<arg>test-session</arg>
<arg>/data/2.5/onecall?lat=${coord}[0]&amp;lon=${coord}[1]&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02</arg>
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<msg timestamp="20210420 04:47:58.653" level="INFO">GET Request : url=https://openweathermap.org/data/2.5/onecall?lat=10.75&amp;lon=106.6667&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02 
 path_url=/data/2.5/onecall?lat=10.75&amp;lon=106.6667&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20210420 04:47:58.653" level="INFO">GET Response : url=https://openweathermap.org/data/2.5/onecall?lat=10.75&amp;lon=106.6667&amp;units=metric&amp;appid=439d4b804bc8187953eb36d2a8c26a02 
 status=200, reason=OK 
 body={"lat":10.75,"lon":106.6667,"timezone":"Asia/Ho_Chi_Minh","timezone_offset":25200,"current":{"dt":1618868855,"sunrise":1618871987,"sunset":1618916663,"temp":26,"feels_like":26,"pressure":1009,"humidity":94,"dew_point":24.96,"uvi":0,"clouds":40,"visibility":10000,"wind_speed":1.03,"wind_deg":80,"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}]},"minutely":[{"dt":1618868880,"precipitation":0},{"dt":1618868940,"precipitation":0},{"dt":1618869000,"precipitation":0},{"dt":1618869060,"precipitation":0},{"dt":1618869120,"precipitation":0},{"dt":1618869180,"precipitation":0},{"dt":1618869240,"precipitation":0},{"dt":1618869300,"precipitation":0},{"dt":1618869360,"precipitation":0},{"dt":1618869420,"precipitation":0},{"dt":1618869480,"precipitation":0},{"dt":1618869540,"precipitation":0},{"dt":1618869600,"precipitation":0},{"dt":1618869660,"precipitation":0},{"dt":1618869720,"precipitation":0},{"dt":1618869780,"precipitation":0},{"dt":1618869840,"precipitation":0},{"dt":1618869900,"precipitation":0},{"dt":1618869960,"precipitation":0},{"dt":1618870020,"precipitation":0},{"dt":1618870080,"precipitation":0},{"dt":1618870140,"precipitation":0},{"dt":1618870200,"precipitation":0},{"dt":1618870260,"precipitation":0},{"dt":1618870320,"precipitation":0},{"dt":1618870380,"precipitation":0},{"dt":1618870440,"precipitation":0},{"dt":1618870500,"precipitation":0},{"dt":1618870560,"precipitation":0},{"dt":1618870620,"precipitation":0},{"dt":1618870680,"precipitation":0},{"dt":1618870740,"precipitation":0},{"dt":1618870800,"precipitation":0},{"dt":1618870860,"precipitation":0},{"dt":1618870920,"precipitation":0},{"dt":1618870980,"precipitation":0},{"dt":1618871040,"precipitation":0},{"dt":1618871100,"precipitation":0},{"dt":1618871160,"precipitation":0},{"dt":1618871220,"precipitation":0},{"dt":1618871280,"precipitation":0},{"dt":1618871340,"precipitation":0},{"dt":1618871400,"precipitation":0},{"dt":1618871460,"precipitation":0},{"dt":1618871520,"precipitation":0},{"dt":1618871580,"precipitation":0},{"dt":1618871640,"precipitation":0},{"dt":1618871700,"precipitation":0},{"dt":1618871760,"precipitation":0},{"dt":1618871820,"precipitation":0},{"dt":1618871880,"precipitation":0},{"dt":1618871940,"precipitation":0},{"dt":1618872000,"precipitation":0},{"dt":1618872060,"precipitation":0},{"dt":1618872120,"precipitation":0},{"dt":1618872180,"precipitation":0},{"dt":1618872240,"precipitation":0},{"dt":1618872300,"precipitation":0},{"dt":1618872360,"precipitation":0},{"dt":1618872420,"precipitation":0},{"dt":1618872480,"precipitation":0}],"hourly":[{"dt":1618866000,"temp":26.05,"feels_like":26.05,"pressure":1009,"humidity":91,"dew_point":24.46,"uvi":0,"clouds":52,"visibility":10000,"wind_speed":1.64,"wind_deg":212,"wind_gust":3.14,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04n"}],"pop":0.37},{"dt":1618869600,"temp":26,"feels_like":26,"pressure":1009,"humidity":94,"dew_point":24.96,"uvi":0,"clouds":40,"visibility":10000,"wind_speed":1.38,"wind_deg":197,"wind_gust":2.17,"weather":[{"id":802,"main":"Clouds","description":"scattered clouds","icon":"03n"}],"pop":0.4},{"dt":1618873200,"temp":26.04,"feels_like":26.04,"pressure":1009,"humidity":91,"dew_point":24.45,"uvi":0,"clouds":52,"visibility":10000,"wind_speed":1.39,"wind_deg":190,"wind_gust":2.21,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.45},{"dt":1618876800,"temp":26.53,"feels_like":26.53,"pressure":1010,"humidity":86,"dew_point":23.99,"uvi":0.81,"clouds":64,"visibility":10000,"wind_speed":1.32,"wind_deg":205,"wind_gust":2.13,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.45},{"dt":1618880400,"temp":27.79,"feels_like":31.17,"pressure":1010,"humidity":77,"dew_point":23.39,"uvi":2.72,"clouds":75,"visibility":10000,"wind_speed":1.9,"wind_deg":204,"wind_gust":2.6,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.11},{"dt":1618884000,"temp":29.62,"feels_like":33.28,"pressure":1011,"humidity":66,"dew_point":22.59,"uvi":5.82,"clouds":86,"visibility":10000,"wind_speed":2.36,"wind_deg":220,"wind_gust":2.73,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04d"}],"pop":0.11},{"dt":1618887600,"temp":32.2,"feels_like":35.25,"pressure":1011,"humidity":52,"dew_point":21.39,"uvi":9.24,"clouds":76,"visibility":10000,"wind_speed":2.63,"wind_deg":227,"wind_gust":3.03,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.11},{"dt":1618891200,"temp":33.72,"feels_like":36.56,"pressure":1010,"humidity":46,"dew_point":20.85,"uvi":6.8,"clouds":78,"visibility":10000,"wind_speed":2.83,"wind_deg":233,"wind_gust":3.21,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.11},{"dt":1618894800,"temp":34.94,"feels_like":37.41,"pressure":1009,"humidity":41,"dew_point":20.18,"uvi":7.28,"clouds":81,"visibility":10000,"wind_speed":2.98,"wind_deg":237,"wind_gust":3.24,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.19},{"dt":1618898400,"temp":35.69,"feels_like":37.88,"pressure":1007,"humidity":38,"dew_point":19.66,"uvi":6.57,"clouds":83,"visibility":10000,"wind_speed":2.93,"wind_deg":249,"wind_gust":3.31,"weather":[{"id":803,"main":"Clouds","description":"broken clouds","icon":"04d"}],"pop":0.19},{"dt":1618902000,"temp":34.63,"feels_like":36.54,"pressure":1006,"humidity":40,"dew_point":19.58,"uvi":2.34,"clouds":100,"visibility":10000,"wind_speed":2.84,"wind_deg":260,"wind_gust":3.61,"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10d"}],"pop":0.23,"rain":{"1h":0.1}},{"dt":1618905600,"temp":32.62,"feels_like":35.54,"pressure":1006,"humidity":50,"dew_point":21.05,"uvi":1.4,"clouds":100,"visibility":10000,"wind_speed":2.05,"wind_deg":240,"wind_gust":4,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04d"}],"pop":0.09},{"dt":1618909200,"temp":31.6,"feels_like":34.83,"pressure":1006,"humidity":55,"dew_point":21.64,"uvi":0.6,"clouds":100,"visibility":10000,"wind_speed":2.15,"wind_deg":223,"wind_gust":3.71,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04d"}],"pop":0.12},{"dt":1618912800,"temp":31.43,"feels_like":34.99,"pressure":1006,"humidity":57,"dew_point":21.95,"uvi":0.26,"clouds":100,"visibility":10000,"wind_speed":1.63,"wind_deg":221,"wind_gust":2.97,"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10d"}],"pop":0.33,"rain":{"1h":0.38}},{"dt":1618916400,"temp":31.04,"feels_like":34.68,"pressure":1007,"humidity":59,"dew_point":22.25,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":1.37,"wind_deg":190,"wind_gust":2.23,"weather":[{"id":500,"main":"Rain","description":"light rain","icon":"10d"}],"pop":0.33,"rain":{"1h":0.15}},{"dt":1618920000,"temp":30.42,"feels_like":34.1,"pressure":1008,"humidity":62,"dew_point":22.41,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":1.93,"wind_deg":167,"wind_gust":2.77,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.33},{"dt":1618923600,"temp":29.73,"feels_like":33.31,"pressure":1009,"humidity":65,"dew_point":22.55,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.61,"wind_deg":155,"wind_gust":4.01,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.15},{"dt":1618927200,"temp":29.26,"feels_like":32.91,"pressure":1009,"humidity":68,"dew_point":22.75,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.9,"wind_deg":163,"wind_gust":5.01,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.15},{"dt":1618930800,"temp":28.87,"feels_like":32.45,"pressure":1010,"humidity":70,"dew_point":22.95,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.86,"wind_deg":172,"wind_gust":5.22,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.23},{"dt":1618934400,"temp":28.48,"feels_like":31.94,"pressure":1010,"humidity":72,"dew_point":22.91,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.99,"wind_deg":187,"wind_gust":5.74,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.31},{"dt":1618938000,"temp":27.91,"feels_like":30.89,"pressure":1009,"humidity":73,"dew_point":22.84,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":3.15,"wind_deg":199,"wind_gust":6.13,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.23},{"dt":1618941600,"temp":27.54,"feels_like":30.37,"pressure":1009,"humidity":75,"dew_point":22.85,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.65,"wind_deg":208,"wind_gust":5.71,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.25},{"dt":1618945200,"temp":27.38,"feels_like":30.15,"pressure":1008,"humidity":76,"dew_point":22.88,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.35,"wind_deg":215,"wind_gust":5.21,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.24},{"dt":1618948800,"temp":27.21,"feels_like":29.9,"pressure":1008,"humidity":77,"dew_point":22.98,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":2.11,"wind_deg":217,"wind_gust":4.37,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.24},{"dt":1618952400,"temp":27.08,"feels_like":29.72,"pressure":1008,"humidity":78,"dew_point":23.04,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":1.9,"wind_deg":220,"wind_gust":3.8,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.28},{"dt":1618956000,"temp":27.02,"feels_like":29.6,"pressure":1008,"humidity":78,"dew_point":23.03,"uvi":0,"clouds":100,"visibility":10000,"wind_speed":1.77,"wind_deg":218,"wind_gust":3.28,"weather":[{"id":804,"main":"Clouds","description":"overcast clouds","icon":"04n"}],"pop":0.28},{"dt":1618959600,"temp... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20210420 04:47:58.653" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210420 04:47:58.056" endtime="20210420 04:47:58.653"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${body_data}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.657" level="INFO">${body_data} = {'lat': 10.75, 'lon': 106.6667, 'timezone': 'Asia/Ho_Chi_Minh', 'timezone_offset': 25200, 'current': {'dt': 1618868855, 'sunrise': 1618871987, 'sunset': 1618916663, 'temp': 26, 'feels_like': 26, 'pres...</msg>
<status status="PASS" starttime="20210420 04:47:58.654" endtime="20210420 04:47:58.658"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${temp}</var>
<arg>${body_data}[current][temp]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.659" level="INFO">${temp} = 26</msg>
<status status="PASS" starttime="20210420 04:47:58.658" endtime="20210420 04:47:58.659"/>
</kw>
<kw name="Convert Numb To Int" library="helper_func">
<var>${temp}</var>
<arg>${temp}</arg>
<kw name="Convert To Number" library="BuiltIn">
<var>${number}</var>
<arg>${number}</arg>
<arg>0</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20210420 04:47:58.661" level="INFO">${number} = 26.0</msg>
<status status="PASS" starttime="20210420 04:47:58.660" endtime="20210420 04:47:58.661"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${number}</var>
<arg>${number}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210420 04:47:58.662" level="INFO">${number} = 26</msg>
<status status="PASS" starttime="20210420 04:47:58.661" endtime="20210420 04:47:58.662"/>
</kw>
<msg timestamp="20210420 04:47:58.662" level="INFO">${temp} = 26</msg>
<status status="PASS" starttime="20210420 04:47:58.659" endtime="20210420 04:47:58.662"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${temp_feels_like}</var>
<arg>${body_data}[current][feels_like]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.663" level="INFO">${temp_feels_like} = 26</msg>
<status status="PASS" starttime="20210420 04:47:58.663" endtime="20210420 04:47:58.663"/>
</kw>
<kw name="Convert Numb To Int" library="helper_func">
<var>${temp_feels_like}</var>
<arg>${temp_feels_like}</arg>
<kw name="Convert To Number" library="BuiltIn">
<var>${number}</var>
<arg>${number}</arg>
<arg>0</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20210420 04:47:58.665" level="INFO">${number} = 26.0</msg>
<status status="PASS" starttime="20210420 04:47:58.664" endtime="20210420 04:47:58.665"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${number}</var>
<arg>${number}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210420 04:47:58.666" level="INFO">${number} = 26</msg>
<status status="PASS" starttime="20210420 04:47:58.666" endtime="20210420 04:47:58.666"/>
</kw>
<msg timestamp="20210420 04:47:58.667" level="INFO">${temp_feels_like} = 26</msg>
<status status="PASS" starttime="20210420 04:47:58.663" endtime="20210420 04:47:58.667"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${humidity}</var>
<arg>${body_data}[current][humidity]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.668" level="INFO">${humidity} = 94</msg>
<status status="PASS" starttime="20210420 04:47:58.667" endtime="20210420 04:47:58.668"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${pressure}</var>
<arg>${body_data}[current][pressure]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.669" level="INFO">${pressure} = 1009</msg>
<status status="PASS" starttime="20210420 04:47:58.668" endtime="20210420 04:47:58.669"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${wind}</var>
<arg>${body_data}[current][wind_speed]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.670" level="INFO">${wind} = 1.03</msg>
<status status="PASS" starttime="20210420 04:47:58.670" endtime="20210420 04:47:58.670"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${wind}</var>
<arg>${wind}</arg>
<arg>1</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20210420 04:47:58.671" level="INFO">${wind} = 1.0</msg>
<status status="PASS" starttime="20210420 04:47:58.670" endtime="20210420 04:47:58.671"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${visibility}</var>
<arg>${body_data}[current][visibility]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.672" level="INFO">${visibility} = 10000</msg>
<status status="PASS" starttime="20210420 04:47:58.671" endtime="20210420 04:47:58.672"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${visibility}</var>
<arg>${visibility}/1000</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210420 04:47:58.673" level="INFO">${visibility} = 10.0</msg>
<status status="PASS" starttime="20210420 04:47:58.672" endtime="20210420 04:47:58.673"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${weather_desc}</var>
<arg>${body_data}[current][weather][0][description]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.674" level="INFO">${weather_desc} = scattered clouds</msg>
<status status="PASS" starttime="20210420 04:47:58.673" endtime="20210420 04:47:58.674"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dew_point}</var>
<arg>${body_data}[current][dew_point]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:47:58.674" level="INFO">${dew_point} = 24.96</msg>
<status status="PASS" starttime="20210420 04:47:58.674" endtime="20210420 04:47:58.674"/>
</kw>
<kw name="Convert Numb To Int" library="helper_func">
<var>${dew_point}</var>
<arg>${dew_point}</arg>
<kw name="Convert To Number" library="BuiltIn">
<var>${number}</var>
<arg>${number}</arg>
<arg>0</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20210420 04:47:58.676" level="INFO">${number} = 25.0</msg>
<status status="PASS" starttime="20210420 04:47:58.675" endtime="20210420 04:47:58.676"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${number}</var>
<arg>${number}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210420 04:47:58.677" level="INFO">${number} = 25</msg>
<status status="PASS" starttime="20210420 04:47:58.676" endtime="20210420 04:47:58.677"/>
</kw>
<msg timestamp="20210420 04:47:58.678" level="INFO">${dew_point} = 25</msg>
<status status="PASS" starttime="20210420 04:47:58.675" endtime="20210420 04:47:58.678"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${weather_infos_data}</var>
<arg>${temp}</arg>
<arg>${temp_feels_like}</arg>
<arg>${weather_desc}</arg>
<arg>${humidity}</arg>
<arg>${pressure}</arg>
<arg>${wind}</arg>
<arg>${visibility}</arg>
<arg>${dew_point}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210420 04:47:58.679" level="INFO">${weather_infos_data} = [26, 26, 'scattered clouds', 94, 1009, 1.0, 10.0, 25]</msg>
<status status="PASS" starttime="20210420 04:47:58.678" endtime="20210420 04:47:58.679"/>
</kw>
<msg timestamp="20210420 04:47:58.680" level="INFO">${weather_infos_data} = [26, 26, 'scattered clouds', 94, 1009, 1.0, 10.0, 25]</msg>
<status status="PASS" starttime="20210420 04:47:56.848" endtime="20210420 04:47:58.680"/>
</kw>
<kw name="Select Option City" library="search_page">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check_valid}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${DROPDOWN_MENU}/li</arg>
<arg>3s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:58.681" endtime="20210420 04:47:58.701"/>
</kw>
<msg timestamp="20210420 04:47:58.702" level="INFO">${check_valid} = True</msg>
<status status="PASS" starttime="20210420 04:47:58.681" endtime="20210420 04:47:58.702"/>
</kw>
<if>
<branch type="IF" condition="'${check_valid}' == 'True'">
<kw name="Scroll And Click" library="helper_func">
<arg>${DROPDOWN_MENU}/li[1]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${element_clickable} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:47:58.703" endtime="20210420 04:47:58.724"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:47:58.724" endtime="20210420 04:47:58.998"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${element_clickable}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:47:58.999" level="INFO">Clicking element 'xpath://*[@class="search-dropdown-menu"]/li[1]'.</msg>
<status status="PASS" starttime="20210420 04:47:58.998" endtime="20210420 04:47:59.049"/>
</kw>
<status status="PASS" starttime="20210420 04:47:58.703" endtime="20210420 04:47:59.049"/>
</kw>
<status status="PASS" starttime="20210420 04:47:58.702" endtime="20210420 04:47:59.050"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>"There is no option to select"</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20210420 04:47:59.051" endtime="20210420 04:47:59.051"/>
</kw>
<status status="NOT RUN" starttime="20210420 04:47:59.050" endtime="20210420 04:47:59.051"/>
</branch>
<status status="PASS" starttime="20210420 04:47:58.702" endtime="20210420 04:47:59.051"/>
</if>
<status status="PASS" starttime="20210420 04:47:58.680" endtime="20210420 04:47:59.052"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${weather_city_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210420 04:47:59.053" level="INFO">${weather_city_data} = ['Ho Chi Minh City', 'VN']</msg>
<status status="PASS" starttime="20210420 04:47:59.052" endtime="20210420 04:47:59.053"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${weather_infos_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20210420 04:47:59.054" level="INFO">${weather_infos_data} = [26, 26, 'scattered clouds', 94, 1009, 1.0, 10.0, 25]</msg>
<status status="PASS" starttime="20210420 04:47:59.053" endtime="20210420 04:47:59.054"/>
</kw>
<status status="PASS" starttime="20210420 04:47:55.153" endtime="20210420 04:47:59.054"/>
</kw>
<kw name="Then verify that the information weather is displayed same as response data" library="search_step">
<kw name="Verify Weather Data" library="search_page">
<arg>${weather_city_data}</arg>
<arg>${weather_infos_data}</arg>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${LOADING_COVER}</arg>
<arg>${TIMED_OUT}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20210420 04:47:59.056" endtime="20210420 04:48:00.180"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>xpath://*[contains(@class,"weather-items")]//li</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20210420 04:48:00.181" endtime="20210420 04:48:00.463"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_city_name}</var>
<arg>${CITY_NAME_CONTENT}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:48:00.464" endtime="20210420 04:48:00.481"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:48:00.496" level="INFO">${text} = Ho Chi Minh City, VN</msg>
<status status="PASS" starttime="20210420 04:48:00.481" endtime="20210420 04:48:00.496"/>
</kw>
<msg timestamp="20210420 04:48:00.496" level="INFO">${actual_city_name} = Ho Chi Minh City, VN</msg>
<status status="PASS" starttime="20210420 04:48:00.463" endtime="20210420 04:48:00.496"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_city_name}</var>
<arg>${weather_city_data}[0], ${weather_city_data}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:48:00.497" level="INFO">${expected_city_name} = Ho Chi Minh City, VN</msg>
<status status="PASS" starttime="20210420 04:48:00.496" endtime="20210420 04:48:00.497"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_temp}</var>
<arg>${CITY_TEMPERATURE_CONTENT}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:48:00.497" endtime="20210420 04:48:00.512"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:48:00.526" level="INFO">${text} = 26°C</msg>
<status status="PASS" starttime="20210420 04:48:00.513" endtime="20210420 04:48:00.526"/>
</kw>
<msg timestamp="20210420 04:48:00.526" level="INFO">${actual_temp} = 26°C</msg>
<status status="PASS" starttime="20210420 04:48:00.497" endtime="20210420 04:48:00.527"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_temp}</var>
<arg>${weather_infos_data}[0]°C</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:48:00.527" level="INFO">${expected_temp} = 26°C</msg>
<status status="PASS" starttime="20210420 04:48:00.527" endtime="20210420 04:48:00.527"/>
</kw>
<kw name="Wait And Get Text" library="helper_func">
<var>${actual_temp_feels_like}</var>
<arg>${FEELS_LIKE_TEMPERATURE}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:48:00.528" endtime="20210420 04:48:00.543"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:48:00.556" level="INFO">${text} = Feels like 26°C. Scattered clouds. Light air</msg>
<status status="PASS" starttime="20210420 04:48:00.543" endtime="20210420 04:48:00.557"/>
</kw>
<msg timestamp="20210420 04:48:00.557" level="INFO">${actual_temp_feels_like} = Feels like 26°C. Scattered clouds. Light air</msg>
<status status="PASS" starttime="20210420 04:48:00.527" endtime="20210420 04:48:00.557"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${actual_temp_feels_like}</var>
<arg>${actual_temp_feels_like}</arg>
<arg>.[^.]*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20210420 04:48:00.558" level="INFO">${actual_temp_feels_like} = ['Feels like 26°C', '. Scattered clouds', '. Light air']</msg>
<status status="PASS" starttime="20210420 04:48:00.557" endtime="20210420 04:48:00.558"/>
</kw>
<kw name="Get Weather Items" library="search_page">
<var>${actual_weather_items}</var>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${weather_items_length}</var>
<arg>${WEATHER_ITEMS}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20210420 04:48:00.564" level="INFO">${weather_items_length} = 5</msg>
<status status="PASS" starttime="20210420 04:48:00.558" endtime="20210420 04:48:00.564"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${weather_items_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210420 04:48:00.564" level="INFO">${weather_items_list} = []</msg>
<status status="PASS" starttime="20210420 04:48:00.564" endtime="20210420 04:48:00.564"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>1</value>
<value>${weather_items_length}+1</value>
<iter>
<var name="${i}">1</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${weather_item}</var>
<arg>xpath://*[contains(@class,"weather-items")]//li[${i}]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:48:00.565" endtime="20210420 04:48:00.580"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:48:00.599" level="INFO">${text} = 1.0m/s E</msg>
<status status="PASS" starttime="20210420 04:48:00.580" endtime="20210420 04:48:00.600"/>
</kw>
<msg timestamp="20210420 04:48:00.600" level="INFO">${weather_item} = 1.0m/s E</msg>
<status status="PASS" starttime="20210420 04:48:00.565" endtime="20210420 04:48:00.600"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${weather_items_list}</arg>
<arg>${weather_item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210420 04:48:00.600" endtime="20210420 04:48:00.600"/>
</kw>
<status status="PASS" starttime="20210420 04:48:00.565" endtime="20210420 04:48:00.600"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${weather_item}</var>
<arg>xpath://*[contains(@class,"weather-items")]//li[${i}]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:48:00.601" endtime="20210420 04:48:00.616"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:48:00.631" level="INFO">${text} = 1009hPa</msg>
<status status="PASS" starttime="20210420 04:48:00.616" endtime="20210420 04:48:00.631"/>
</kw>
<msg timestamp="20210420 04:48:00.632" level="INFO">${weather_item} = 1009hPa</msg>
<status status="PASS" starttime="20210420 04:48:00.601" endtime="20210420 04:48:00.632"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${weather_items_list}</arg>
<arg>${weather_item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210420 04:48:00.632" endtime="20210420 04:48:00.632"/>
</kw>
<status status="PASS" starttime="20210420 04:48:00.601" endtime="20210420 04:48:00.632"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${weather_item}</var>
<arg>xpath://*[contains(@class,"weather-items")]//li[${i}]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:48:00.633" endtime="20210420 04:48:00.648"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:48:00.662" level="INFO">${text} = Humidity:
94%</msg>
<status status="PASS" starttime="20210420 04:48:00.648" endtime="20210420 04:48:00.663"/>
</kw>
<msg timestamp="20210420 04:48:00.663" level="INFO">${weather_item} = Humidity:
94%</msg>
<status status="PASS" starttime="20210420 04:48:00.633" endtime="20210420 04:48:00.663"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${weather_items_list}</arg>
<arg>${weather_item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210420 04:48:00.663" endtime="20210420 04:48:00.663"/>
</kw>
<status status="PASS" starttime="20210420 04:48:00.633" endtime="20210420 04:48:00.663"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${weather_item}</var>
<arg>xpath://*[contains(@class,"weather-items")]//li[${i}]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:48:00.664" endtime="20210420 04:48:00.679"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:48:00.693" level="INFO">${text} = Dew point:
25°C</msg>
<status status="PASS" starttime="20210420 04:48:00.679" endtime="20210420 04:48:00.693"/>
</kw>
<msg timestamp="20210420 04:48:00.694" level="INFO">${weather_item} = Dew point:
25°C</msg>
<status status="PASS" starttime="20210420 04:48:00.664" endtime="20210420 04:48:00.694"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${weather_items_list}</arg>
<arg>${weather_item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210420 04:48:00.694" endtime="20210420 04:48:00.694"/>
</kw>
<status status="PASS" starttime="20210420 04:48:00.664" endtime="20210420 04:48:00.694"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Wait And Get Text" library="helper_func">
<var>${weather_item}</var>
<arg>xpath://*[contains(@class,"weather-items")]//li[${i}]</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${text_element}</arg>
<arg>${TIMED_OUT}</arg>
<arg>${text_element} not found</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210420 04:48:00.695" endtime="20210420 04:48:00.710"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${text}</var>
<arg>${text_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210420 04:48:00.724" level="INFO">${text} = Visibility:
10.0km</msg>
<status status="PASS" starttime="20210420 04:48:00.710" endtime="20210420 04:48:00.724"/>
</kw>
<msg timestamp="20210420 04:48:00.724" level="INFO">${weather_item} = Visibility:
10.0km</msg>
<status status="PASS" starttime="20210420 04:48:00.695" endtime="20210420 04:48:00.724"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${weather_items_list}</arg>
<arg>${weather_item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210420 04:48:00.724" endtime="20210420 04:48:00.725"/>
</kw>
<status status="PASS" starttime="20210420 04:48:00.694" endtime="20210420 04:48:00.725"/>
</iter>
<status status="PASS" starttime="20210420 04:48:00.564" endtime="20210420 04:48:00.725"/>
</for>
<msg timestamp="20210420 04:48:00.725" level="INFO">${actual_weather_items} = ['1.0m/s E', '1009hPa', 'Humidity:\n94%', 'Dew point:\n25°C', 'Visibility:\n10.0km']</msg>
<status status="PASS" starttime="20210420 04:48:00.558" endtime="20210420 04:48:00.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_temp_feels_like}</var>
<arg>Feels like ${weather_infos_data}[1]°C</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:48:00.726" level="INFO">${expected_temp_feels_like} = Feels like 26°C</msg>
<status status="PASS" starttime="20210420 04:48:00.725" endtime="20210420 04:48:00.726"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_weather_desc}</var>
<arg>${weather_infos_data}[2]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:48:00.726" level="INFO">${expected_weather_desc} = scattered clouds</msg>
<status status="PASS" starttime="20210420 04:48:00.726" endtime="20210420 04:48:00.726"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_humidity}</var>
<arg>${weather_infos_data}[3]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:48:00.727" level="INFO">${expected_humidity} = 94</msg>
<status status="PASS" starttime="20210420 04:48:00.727" endtime="20210420 04:48:00.727"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_pressure}</var>
<arg>${weather_infos_data}[4]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:48:00.727" level="INFO">${expected_pressure} = 1009</msg>
<status status="PASS" starttime="20210420 04:48:00.727" endtime="20210420 04:48:00.727"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_wind}</var>
<arg>${weather_infos_data}[5]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:48:00.728" level="INFO">${expected_wind} = 1.0</msg>
<status status="PASS" starttime="20210420 04:48:00.728" endtime="20210420 04:48:00.728"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_visibility}</var>
<arg>${weather_infos_data}[6]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:48:00.728" level="INFO">${expected_visibility} = 10.0</msg>
<status status="PASS" starttime="20210420 04:48:00.728" endtime="20210420 04:48:00.728"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_dew_point}</var>
<arg>${weather_infos_data}[7]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210420 04:48:00.729" level="INFO">${expected_dew_point} = 25</msg>
<status status="PASS" starttime="20210420 04:48:00.729" endtime="20210420 04:48:00.729"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actual_city_name}</arg>
<arg>${expected_city_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210420 04:48:00.729" endtime="20210420 04:48:00.729"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${actual_temp}</arg>
<arg>${expected_temp}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210420 04:48:00.730" endtime="20210420 04:48:00.730"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_temp_feels_like}[0]</arg>
<arg>${expected_temp_feels_like}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:48:00.730" endtime="20210420 04:48:00.730"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_temp_feels_like}[1]</arg>
<arg>${expected_weather_desc}</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:48:00.730" endtime="20210420 04:48:00.731"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${actual_weather_items}[0]</arg>
<arg>${expected_wind}m/s</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:48:00.731" endtime="20210420 04:48:00.731"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>'${actual_weather_items}[1]'</arg>
<arg>'${expected_pressure}hPa'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:48:00.732" endtime="20210420 04:48:00.732"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>'${actual_weather_items}[2]'</arg>
<arg>'Humidity:\n${expected_humidity}%'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:48:00.732" endtime="20210420 04:48:00.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>'${actual_weather_items}[3]'</arg>
<arg>'Dew point:\n${expected_dew_point}°C'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:48:00.733" endtime="20210420 04:48:00.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>'${actual_weather_items}[4]'</arg>
<arg>'Visibility:\n${expected_visibility}km'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210420 04:48:00.733" endtime="20210420 04:48:00.734"/>
</kw>
<status status="PASS" starttime="20210420 04:47:59.055" endtime="20210420 04:48:00.734"/>
</kw>
<status status="PASS" starttime="20210420 04:47:59.054" endtime="20210420 04:48:00.734"/>
</kw>
<kw name="End Web Test" library="Common" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210420 04:48:00.735" endtime="20210420 04:48:00.813"/>
</kw>
<status status="PASS" starttime="20210420 04:48:00.734" endtime="20210420 04:48:00.814"/>
</kw>
<tag>TC-verify_that_information_weather_is_displayed_same_as_data</tag>
<status status="PASS" starttime="20210420 04:47:45.855" endtime="20210420 04:48:00.814"/>
</test>
<doc>Test Suites for Searching weather</doc>
<status status="PASS" starttime="20210420 04:47:14.435" endtime="20210420 04:48:00.815"/>
</suite>
<status status="PASS" starttime="20210420 04:47:14.433" endtime="20210420 04:48:00.818"/>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 2 executions.</doc>
<status status="PASS" starttime="20210420 04:47:14.410" endtime="20210420 04:48:10.107"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">TC-can_change from_metric_to_imperial</stat>
<stat pass="1" fail="0" skip="0">TC-can_search_city</stat>
<stat pass="1" fail="0" skip="0">TC-can_select_options_city</stat>
<stat pass="1" fail="0" skip="0">TC-verify_that_information_weather_is_displayed_same_as_data</stat>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1" name="DataDrivenTest">Tests.DataDrivenTest</stat>
<stat pass="6" fail="0" skip="0" id="s1-s1-s1" name="Search Weather">Tests.DataDrivenTest.Search Weather</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="SearchTheCityTest">Tests.SearchTheCityTest</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2-s1" name="Search Weather">Tests.SearchTheCityTest.Search Weather</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210420 04:47:23.542" level="WARN">Multiple test cases with name 'Verify Searching Weather' executed in test suite 'Tests.DataDrivenTest.Search Weather'.</msg>
<msg timestamp="20210420 04:47:32.149" level="WARN">Multiple test cases with name 'Verify Searching Weather' executed in test suite 'Tests.DataDrivenTest.Search Weather'.</msg>
<msg timestamp="20210420 04:47:40.425" level="WARN">Multiple test cases with name 'Verify Searching Weather' executed in test suite 'Tests.DataDrivenTest.Search Weather'.</msg>
<msg timestamp="20210420 04:47:48.944" level="WARN">Multiple test cases with name 'Verify Searching Weather' executed in test suite 'Tests.DataDrivenTest.Search Weather'.</msg>
<msg timestamp="20210420 04:47:57.383" level="WARN">Multiple test cases with name 'Verify Searching Weather' executed in test suite 'Tests.DataDrivenTest.Search Weather'.</msg>
<msg timestamp="20210420 04:48:00.823" level="ERROR">RuntimeError catched in remotelib keyword execution. Maybe there is no connection - is pabot called with --pabotlib option? ErrorDetails: RuntimeError('Connection to remote server broken: [Errno 61] Connection refused')</msg>
</errors>
</robot>
